//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsEndpoint
{
        [TestMethod]
        public void ListServiceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""600e23ee-3649-44cd-abea-eb85b48468be"",
        ""url"": ""/v2/events/f7ed57fe-dad5-4075-91de-f2b1c5f85fab"",
        ""created_at"": ""2016-04-11T13:33:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""72624abf-47ae-4e4a-91ad-752c75bc66e3"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1785"",
        ""actee"": ""c5806799-1dee-4038-a4d1-d4910451b741"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-04-11T13:33:12Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("600e23ee-3649-44cd-abea-eb85b48468be", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f7ed57fe-dad5-4075-91de-f2b1c5f85fab", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("72624abf-47ae-4e4a-91ad-752c75bc66e3", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1785", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("c5806799-1dee-4038-a4d1-d4910451b741", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a86868f3-f08c-4c5a-8762-f52e12677b6d"",
        ""url"": ""/v2/events/2b5a3436-15bb-494e-b2ad-cd2bc8c47b53"",
        ""created_at"": ""2016-04-11T13:33:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-285"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""45a841b5-6933-4054-94f8-139c4290f37c"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-04-11T13:33:13Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""a86868f3-f08c-4c5a-8762-f52e12677b6d"",
            ""organization_guid"": ""a86868f3-f08c-4c5a-8762-f52e12677b6d""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a86868f3-f08c-4c5a-8762-f52e12677b6d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("a86868f3-f08c-4c5a-8762-f52e12677b6d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2b5a3436-15bb-494e-b2ad-cd2bc8c47b53", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-285", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("45a841b5-6933-4054-94f8-139c4290f37c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("a86868f3-f08c-4c5a-8762-f52e12677b6d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5dd7a3a1-0203-4352-ab8d-9016a2c72d9e"",
        ""url"": ""/v2/events/1231065d-2a97-4ea8-8964-351d894317d6"",
        ""created_at"": ""2016-04-11T13:33:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-287"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""67af1ab4-3182-43cd-9a2e-36df66d2d1d1"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1904"",
        ""timestamp"": ""2016-04-11T13:33:13Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""5dd7a3a1-0203-4352-ab8d-9016a2c72d9e"",
            ""name"": ""name-1904""
          }
        },
        ""space_guid"": ""5dd7a3a1-0203-4352-ab8d-9016a2c72d9e"",
        ""organization_guid"": ""5dd7a3a1-0203-4352-ab8d-9016a2c72d9e""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5dd7a3a1-0203-4352-ab8d-9016a2c72d9e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/1231065d-2a97-4ea8-8964-351d894317d6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-287", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("67af1ab4-3182-43cd-9a2e-36df66d2d1d1", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1904", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("5dd7a3a1-0203-4352-ab8d-9016a2c72d9e", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("5dd7a3a1-0203-4352-ab8d-9016a2c72d9e", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""101a589c-3437-43cd-986e-e2f420f94ffa"",
        ""url"": ""/v2/events/44790585-baef-48cd-9b76-9edf5342b2d8"",
        ""created_at"": ""2016-04-11T13:33:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-223"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ba24aa94-307a-4fd4-bbba-528c8e0a1a50"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1016"",
        ""timestamp"": ""2016-04-11T13:33:08Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""101a589c-3437-43cd-986e-e2f420f94ffa"",
        ""organization_guid"": ""101a589c-3437-43cd-986e-e2f420f94ffa""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("101a589c-3437-43cd-986e-e2f420f94ffa", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/44790585-baef-48cd-9b76-9edf5342b2d8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-223", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("ba24aa94-307a-4fd4-bbba-528c8e0a1a50", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1016", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("101a589c-3437-43cd-986e-e2f420f94ffa", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("101a589c-3437-43cd-986e-e2f420f94ffa", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAllEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""159f61cc-d67f-4219-b038-9fe72697f940"",
        ""url"": ""/v2/events/beea8ba2-3236-4530-aff3-c64f953eef4e"",
        ""created_at"": ""2016-04-11T13:33:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-968"",
        ""actor"": ""5c17a9ca-fbf3-45b9-8f0a-b354ef1a9751"",
        ""actor_type"": ""name-969"",
        ""actor_name"": ""name-970"",
        ""actee"": ""43a64121-6a7c-4664-a0d5-f5db20f8104a"",
        ""actee_type"": ""name-971"",
        ""actee_name"": ""name-972"",
        ""timestamp"": ""2016-04-11T13:33:08Z"",
        ""metadata"": {

        },
        ""space_guid"": ""159f61cc-d67f-4219-b038-9fe72697f940"",
        ""organization_guid"": ""159f61cc-d67f-4219-b038-9fe72697f940""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""159f61cc-d67f-4219-b038-9fe72697f940"",
        ""url"": ""/v2/events/bf1e60a6-7fbf-4c3b-81a9-c88823551ce2"",
        ""created_at"": ""2016-04-11T13:33:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-976"",
        ""actor"": ""6a2bea9f-0079-4395-8831-f26dca95d82a"",
        ""actor_type"": ""name-977"",
        ""actor_name"": ""name-978"",
        ""actee"": ""63bcc006-8c22-4daf-963b-a1afc0a4d972"",
        ""actee_type"": ""name-979"",
        ""actee_name"": ""name-980"",
        ""timestamp"": ""2016-04-11T13:33:08Z"",
        ""metadata"": {

        },
        ""space_guid"": ""159f61cc-d67f-4219-b038-9fe72697f940"",
        ""organization_guid"": ""159f61cc-d67f-4219-b038-9fe72697f940""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""159f61cc-d67f-4219-b038-9fe72697f940"",
        ""url"": ""/v2/events/75fa2046-0fad-4c63-a0d7-afc0b6acf28b"",
        ""created_at"": ""2016-04-11T13:33:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-984"",
        ""actor"": ""31cc4fa3-d243-4df4-a76c-00cf5b5462de"",
        ""actor_type"": ""name-985"",
        ""actor_name"": ""name-986"",
        ""actee"": ""4b5434ab-8eb6-4958-95be-7a15ca110f48"",
        ""actee_type"": ""name-987"",
        ""actee_name"": ""name-988"",
        ""timestamp"": ""2016-04-11T13:33:08Z"",
        ""metadata"": {

        },
        ""space_guid"": ""159f61cc-d67f-4219-b038-9fe72697f940"",
        ""organization_guid"": ""159f61cc-d67f-4219-b038-9fe72697f940""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAllEvents().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/beea8ba2-3236-4530-aff3-c64f953eef4e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-968", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("5c17a9ca-fbf3-45b9-8f0a-b354ef1a9751", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("name-969", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-970", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("43a64121-6a7c-4664-a0d5-f5db20f8104a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("name-971", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-972", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/bf1e60a6-7fbf-4c3b-81a9-c88823551ce2", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-976", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("6a2bea9f-0079-4395-8831-f26dca95d82a", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("name-977", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("name-978", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("63bcc006-8c22-4daf-963b-a1afc0a4d972", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("name-979", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-980", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/75fa2046-0fad-4c63-a0d7-afc0b6acf28b", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-984", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("31cc4fa3-d243-4df4-a76c-00cf5b5462de", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("name-985", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("name-986", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("4b5434ab-8eb6-4958-95be-7a15ca110f48", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("name-987", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-988", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("159f61cc-d67f-4219-b038-9fe72697f940", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f28a9e4c-a2b6-4eb4-ab1e-53ad2a5d48aa"",
        ""url"": ""/v2/events/36383ff2-43bc-4ffe-928f-b09ae912ff57"",
        ""created_at"": ""2016-04-11T13:33:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""fa223e99-7b22-4a87-99d1-f4a05fd39bba"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1400"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-04-11T13:33:10Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f28a9e4c-a2b6-4eb4-ab1e-53ad2a5d48aa", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/36383ff2-43bc-4ffe-928f-b09ae912ff57", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("fa223e99-7b22-4a87-99d1-f4a05fd39bba", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1400", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2ee03593-1ab1-431c-86fd-73f7fcc4bd1a"",
        ""url"": ""/v2/events/5df4d332-62e1-4ebc-a44d-cdb8b7a1f9a8"",
        ""created_at"": ""2016-04-11T13:33:14Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""fb92497a-af95-4603-b4ef-30eba13a473f"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2019"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-04-11T13:33:14Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""2ee03593-1ab1-431c-86fd-73f7fcc4bd1a"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2ee03593-1ab1-431c-86fd-73f7fcc4bd1a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5df4d332-62e1-4ebc-a44d-cdb8b7a1f9a8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("fb92497a-af95-4603-b4ef-30eba13a473f", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-2019", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("plan-name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b18435a2-cea2-4ad4-9077-5004d798a985"",
        ""url"": ""/v2/events/a987393e-55ba-407f-ab36-bca1fbbf30f3"",
        ""created_at"": ""2016-04-11T13:33:14Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""b9922d0b-011d-48a0-ae99-6fd07f38856b"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-2044"",
        ""actee"": ""655c2ed4-4ad8-4d53-8707-3a76098afc48"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-04-11T13:33:14Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b18435a2-cea2-4ad4-9077-5004d798a985", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a987393e-55ba-407f-ab36-bca1fbbf30f3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("b9922d0b-011d-48a0-ae99-6fd07f38856b", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-2044", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("655c2ed4-4ad8-4d53-8707-3a76098afc48", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("new name", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bbaca74a-ad81-4927-a2c2-1d55fd841234"",
        ""url"": ""/v2/events/48d9a6be-31ee-4ba2-b3c6-9c1cb638fc1e"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-237"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""89f48508-c142-45c7-b654-c9e1cb0b65a1"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""bbaca74a-ad81-4927-a2c2-1d55fd841234""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("bbaca74a-ad81-4927-a2c2-1d55fd841234", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/48d9a6be-31ee-4ba2-b3c6-9c1cb638fc1e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-237", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("89f48508-c142-45c7-b654-c9e1cb0b65a1", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("bbaca74a-ad81-4927-a2c2-1d55fd841234", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""742b1c76-f2c3-424e-9d8f-a008548d6fb1"",
        ""url"": ""/v2/events/988cf472-b6c8-4a1d-8ee2-9e557457513e"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-231"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""911b05eb-ce28-4268-b522-cf75fd4244a4"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1127"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""742b1c76-f2c3-424e-9d8f-a008548d6fb1"",
        ""organization_guid"": ""742b1c76-f2c3-424e-9d8f-a008548d6fb1""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("742b1c76-f2c3-424e-9d8f-a008548d6fb1", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/988cf472-b6c8-4a1d-8ee2-9e557457513e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-231", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("911b05eb-ce28-4268-b522-cf75fd4244a4", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1127", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("742b1c76-f2c3-424e-9d8f-a008548d6fb1", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("742b1c76-f2c3-424e-9d8f-a008548d6fb1", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStartEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c3067ee2-6582-4f87-921d-e96169d84c39"",
        ""url"": ""/v2/events/9f843913-0324-4fb1-ac93-1ff8dce46288"",
        ""created_at"": ""2016-04-11T13:33:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-255"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e631cf58-09e4-44a9-96ab-ac8356653375"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-1455"",
        ""timestamp"": ""2016-04-11T13:33:10Z"",
        ""metadata"": {

        },
        ""space_guid"": ""c3067ee2-6582-4f87-921d-e96169d84c39"",
        ""organization_guid"": ""c3067ee2-6582-4f87-921d-e96169d84c39""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStartEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c3067ee2-6582-4f87-921d-e96169d84c39", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/9f843913-0324-4fb1-ac93-1ff8dce46288", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-255", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e631cf58-09e4-44a9-96ab-ac8356653375", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1455", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c3067ee2-6582-4f87-921d-e96169d84c39", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("c3067ee2-6582-4f87-921d-e96169d84c39", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""29078f13-dcca-4a96-b3e1-554783fd4bc5"",
        ""url"": ""/v2/events/bfde007c-3508-45e7-b0f3-6e9f76b09c57"",
        ""created_at"": ""2016-04-11T13:33:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""3aa69984-3028-496c-841a-7451859187af"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1562"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-04-11T13:33:11Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""29078f13-dcca-4a96-b3e1-554783fd4bc5"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("29078f13-dcca-4a96-b3e1-554783fd4bc5", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/bfde007c-3508-45e7-b0f3-6e9f76b09c57", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("3aa69984-3028-496c-841a-7451859187af", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1562", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("guid", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ff85a480-2e18-4456-ad6c-b68dd54e1fe8"",
        ""url"": ""/v2/events/f494fe4d-8b10-4dde-9f17-e08ef8c64f8a"",
        ""created_at"": ""2016-04-11T13:33:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-245"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0f120028-d46e-402c-b700-0d8cec588a81"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1319"",
        ""timestamp"": ""2016-04-11T13:33:10Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("ff85a480-2e18-4456-ad6c-b68dd54e1fe8", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f494fe4d-8b10-4dde-9f17-e08ef8c64f8a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-245", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0f120028-d46e-402c-b700-0d8cec588a81", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1319", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void RetrieveEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""01b0ecf9-e45d-48ee-ab1d-d1e66bd4a3e9"",
    ""url"": ""/v2/events/249cc943-b3a1-4842-9edd-97be68f4de65"",
    ""created_at"": ""2016-04-11T13:33:08Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-944"",
    ""actor"": ""6f864fae-b1a0-4b49-bb88-fb1e73cd30fa"",
    ""actor_type"": ""name-945"",
    ""actor_name"": ""name-946"",
    ""actee"": ""4911d7dc-2b2a-44de-9c2f-313a1e8fd47a"",
    ""actee_type"": ""name-947"",
    ""actee_name"": ""name-948"",
    ""timestamp"": ""2016-04-11T13:33:08Z"",
    ""metadata"": {

    },
    ""space_guid"": ""01b0ecf9-e45d-48ee-ab1d-d1e66bd4a3e9"",
    ""organization_guid"": ""01b0ecf9-e45d-48ee-ab1d-d1e66bd4a3e9""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.Events.RetrieveEvent(guid).Result;


                Assert.AreEqual("01b0ecf9-e45d-48ee-ab1d-d1e66bd4a3e9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/249cc943-b3a1-4842-9edd-97be68f4de65", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-944", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("6f864fae-b1a0-4b49-bb88-fb1e73cd30fa", TestUtil.ToTestableString(obj.Actor), true);
                Assert.AreEqual("name-945", TestUtil.ToTestableString(obj.ActorType), true);
                Assert.AreEqual("name-946", TestUtil.ToTestableString(obj.ActorName), true);
                Assert.AreEqual("4911d7dc-2b2a-44de-9c2f-313a1e8fd47a", TestUtil.ToTestableString(obj.Actee), true);
                Assert.AreEqual("name-947", TestUtil.ToTestableString(obj.ActeeType), true);
                Assert.AreEqual("name-948", TestUtil.ToTestableString(obj.ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj.Timestamp), true);
                Assert.AreEqual("01b0ecf9-e45d-48ee-ab1d-d1e66bd4a3e9", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("01b0ecf9-e45d-48ee-ab1d-d1e66bd4a3e9", TestUtil.ToTestableString(obj.OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3b1613fc-ede2-434d-82f9-f819635aee89"",
        ""url"": ""/v2/events/8e41b980-970d-499e-8d5c-575ba77687f6"",
        ""created_at"": ""2016-04-11T13:33:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-225"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5e0e9787-d55a-417b-ba85-d24dfedb3710"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1045"",
        ""timestamp"": ""2016-04-11T13:33:08Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""3b1613fc-ede2-434d-82f9-f819635aee89"",
        ""organization_guid"": ""3b1613fc-ede2-434d-82f9-f819635aee89""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("3b1613fc-ede2-434d-82f9-f819635aee89", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8e41b980-970d-499e-8d5c-575ba77687f6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-225", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5e0e9787-d55a-417b-ba85-d24dfedb3710", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1045", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("3b1613fc-ede2-434d-82f9-f819635aee89", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("3b1613fc-ede2-434d-82f9-f819635aee89", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceKeyDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5c2440a0-5140-4315-aecd-e47fbc8b0b49"",
        ""url"": ""/v2/events/0ffe643b-d26c-40c1-8c2f-47241909998b"",
        ""created_at"": ""2016-04-11T13:33:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-291"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9427a4cf-1717-4153-ba33-868b32842807"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-1965"",
        ""timestamp"": ""2016-04-11T13:33:13Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""5c2440a0-5140-4315-aecd-e47fbc8b0b49"",
        ""organization_guid"": ""5c2440a0-5140-4315-aecd-e47fbc8b0b49""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceKeyDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("5c2440a0-5140-4315-aecd-e47fbc8b0b49", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0ffe643b-d26c-40c1-8c2f-47241909998b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-291", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9427a4cf-1717-4153-ba33-868b32842807", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_key", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1965", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("5c2440a0-5140-4315-aecd-e47fbc8b0b49", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("5c2440a0-5140-4315-aecd-e47fbc8b0b49", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3abb6d09-b203-4b66-952f-926706dc1860"",
        ""url"": ""/v2/events/1b72b39f-776c-4c88-8627-fbf84c9c2092"",
        ""created_at"": ""2016-04-11T13:33:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""68d86e08-b289-4cf2-895a-bd3cdc3d8160"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1537"",
        ""actee"": ""968cdf9b-c64d-4173-b4ea-9f4f49f25702"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-62"",
        ""timestamp"": ""2016-04-11T13:33:11Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("3abb6d09-b203-4b66-952f-926706dc1860", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/1b72b39f-776c-4c88-8627-fbf84c9c2092", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("68d86e08-b289-4cf2-895a-bd3cdc3d8160", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1537", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("968cdf9b-c64d-4173-b4ea-9f4f49f25702", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("label-62", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""89008503-7d92-4af9-a463-bbf5da33823f"",
        ""url"": ""/v2/events/8481eb51-5eec-4671-a2e1-166c5ad69db1"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-239"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""78ce0bfc-6a97-450a-b5fb-0667b052e8f3"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1238"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("89008503-7d92-4af9-a463-bbf5da33823f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8481eb51-5eec-4671-a2e1-166c5ad69db1", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-239", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("78ce0bfc-6a97-450a-b5fb-0667b052e8f3", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1238", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""19bf868e-b600-449e-8262-8e9f09fb9f4c"",
        ""url"": ""/v2/events/f2cd5c13-3378-44f5-a4c8-64060dd89655"",
        ""created_at"": ""2016-04-11T13:33:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-275"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""19adc7c8-f2b2-4f13-84b4-316de7a1c42a"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1727"",
        ""timestamp"": ""2016-04-11T13:33:12Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""19bf868e-b600-449e-8262-8e9f09fb9f4c""
          }
        },
        ""space_guid"": ""19bf868e-b600-449e-8262-8e9f09fb9f4c"",
        ""organization_guid"": ""19bf868e-b600-449e-8262-8e9f09fb9f4c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("19bf868e-b600-449e-8262-8e9f09fb9f4c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/f2cd5c13-3378-44f5-a4c8-64060dd89655", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-275", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("19adc7c8-f2b2-4f13-84b4-316de7a1c42a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1727", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("19bf868e-b600-449e-8262-8e9f09fb9f4c", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("19bf868e-b600-449e-8262-8e9f09fb9f4c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7c6794f2-b8c0-4df8-bb9a-afe16493dfa0"",
        ""url"": ""/v2/events/71d36a6b-7c4c-4c69-84dd-b2730ca876ba"",
        ""created_at"": ""2016-04-11T13:33:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.update"",
        ""actor"": ""uaa-id-229"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""076e4605-0f06-40e7-8a81-2cbbd0446af8"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-34"",
        ""timestamp"": ""2016-04-11T13:33:08Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""7c6794f2-b8c0-4df8-bb9a-afe16493dfa0"",
            ""space_guid"": ""7c6794f2-b8c0-4df8-bb9a-afe16493dfa0""
          }
        },
        ""space_guid"": ""7c6794f2-b8c0-4df8-bb9a-afe16493dfa0"",
        ""organization_guid"": ""7c6794f2-b8c0-4df8-bb9a-afe16493dfa0""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7c6794f2-b8c0-4df8-bb9a-afe16493dfa0", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/71d36a6b-7c4c-4c69-84dd-b2730ca876ba", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-229", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("076e4605-0f06-40e7-8a81-2cbbd0446af8", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-34", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("7c6794f2-b8c0-4df8-bb9a-afe16493dfa0", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("7c6794f2-b8c0-4df8-bb9a-afe16493dfa0", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fa77ecb9-4dbb-4d3a-a8d8-98fdd8ac6d30"",
        ""url"": ""/v2/events/b53ee212-e7fc-4245-a6ea-cb3a06f1703a"",
        ""created_at"": ""2016-04-11T13:33:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""f310e999-9b5c-47b6-be62-a20899e4b2fb"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1701"",
        ""actee"": ""0453951d-5e7d-465f-9232-39ef9786cd36"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1702"",
        ""timestamp"": ""2016-04-11T13:33:12Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("fa77ecb9-4dbb-4d3a-a8d8-98fdd8ac6d30", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b53ee212-e7fc-4245-a6ea-cb3a06f1703a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("f310e999-9b5c-47b6-be62-a20899e4b2fb", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1701", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0453951d-5e7d-465f-9232-39ef9786cd36", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1702", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""79c1007b-791a-46c2-8f3b-80d137054c6c"",
        ""url"": ""/v2/events/0f6251f3-785a-4310-9ee4-f5a90f6f0a57"",
        ""created_at"": ""2016-04-11T13:33:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-289"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a83cf1fc-8865-490f-b02f-faa8abc8ade7"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1929"",
        ""timestamp"": ""2016-04-11T13:33:13Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1929"",
            ""service_plan_guid"": ""79c1007b-791a-46c2-8f3b-80d137054c6c"",
            ""space_guid"": ""79c1007b-791a-46c2-8f3b-80d137054c6c""
          }
        },
        ""space_guid"": ""79c1007b-791a-46c2-8f3b-80d137054c6c"",
        ""organization_guid"": ""79c1007b-791a-46c2-8f3b-80d137054c6c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("79c1007b-791a-46c2-8f3b-80d137054c6c", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/0f6251f3-785a-4310-9ee4-f5a90f6f0a57", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-289", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a83cf1fc-8865-490f-b02f-faa8abc8ade7", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1929", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("79c1007b-791a-46c2-8f3b-80d137054c6c", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("79c1007b-791a-46c2-8f3b-80d137054c6c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b8f849b8-31fc-46e1-af5a-85b887446e0d"",
        ""url"": ""/v2/events/ac21ce80-dae0-48d0-9270-807f148ceb0b"",
        ""created_at"": ""2016-04-11T13:33:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-269"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9890b182-463e-4c78-be87-54a533a2655c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1648"",
        ""timestamp"": ""2016-04-11T13:33:12Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""b8f849b8-31fc-46e1-af5a-85b887446e0d"",
        ""organization_guid"": ""b8f849b8-31fc-46e1-af5a-85b887446e0d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b8f849b8-31fc-46e1-af5a-85b887446e0d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/ac21ce80-dae0-48d0-9270-807f148ceb0b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-269", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9890b182-463e-4c78-be87-54a533a2655c", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1648", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("b8f849b8-31fc-46e1-af5a-85b887446e0d", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b8f849b8-31fc-46e1-af5a-85b887446e0d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBrokerCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7c9d922d-54f8-4c6d-90f3-6b1997b6c829"",
        ""url"": ""/v2/events/45f30383-b40a-4cc9-a03b-2d077b427e8c"",
        ""created_at"": ""2016-04-11T13:33:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-271"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""20a4dbc6-789b-4254-abff-a9de9c65ab54"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-04-11T13:33:12Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBrokerCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("7c9d922d-54f8-4c6d-90f3-6b1997b6c829", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/45f30383-b40a-4cc9-a03b-2d077b427e8c", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-271", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("20a4dbc6-789b-4254-abff-a9de9c65ab54", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("pancake broker", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshAuthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""53d07e78-8cdb-4bc1-b6eb-927fa5a55943"",
        ""url"": ""/v2/events/a543a437-7d66-4ba7-8414-fa997e6326a3"",
        ""created_at"": ""2016-04-11T13:33:14Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-298"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a01d8e3f-6d1c-4868-8370-0716bcbed2eb"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-2070"",
        ""timestamp"": ""2016-04-11T13:33:14Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""53d07e78-8cdb-4bc1-b6eb-927fa5a55943"",
        ""organization_guid"": ""53d07e78-8cdb-4bc1-b6eb-927fa5a55943""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshAuthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("53d07e78-8cdb-4bc1-b6eb-927fa5a55943", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a543a437-7d66-4ba7-8414-fa997e6326a3", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-298", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("a01d8e3f-6d1c-4868-8370-0716bcbed2eb", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-2070", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("53d07e78-8cdb-4bc1-b6eb-927fa5a55943", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("53d07e78-8cdb-4bc1-b6eb-927fa5a55943", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""52dc0ad2-7f76-4e82-9bea-22fea2f8d058"",
        ""url"": ""/v2/events/6a6b5210-6d13-4a73-9579-db5de083f870"",
        ""created_at"": ""2016-04-11T13:33:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-257"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d95ca8ae-2d1e-4ee7-93a5-26e774e43f47"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1483"",
        ""timestamp"": ""2016-04-11T13:33:11Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""52dc0ad2-7f76-4e82-9bea-22fea2f8d058"",
        ""organization_guid"": ""52dc0ad2-7f76-4e82-9bea-22fea2f8d058""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("52dc0ad2-7f76-4e82-9bea-22fea2f8d058", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/6a6b5210-6d13-4a73-9579-db5de083f870", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-257", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("d95ca8ae-2d1e-4ee7-93a5-26e774e43f47", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1483", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("52dc0ad2-7f76-4e82-9bea-22fea2f8d058", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("52dc0ad2-7f76-4e82-9bea-22fea2f8d058", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppStopEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e2a634f3-dd9c-4bfa-a13b-75125ea5f169"",
        ""url"": ""/v2/events/3565650f-7976-43b6-aa8c-7bdf308cde34"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-235"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e415533a-c4d5-4ed6-9e94-87386d5ff297"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-1182"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {

        },
        ""space_guid"": ""e2a634f3-dd9c-4bfa-a13b-75125ea5f169"",
        ""organization_guid"": ""e2a634f3-dd9c-4bfa-a13b-75125ea5f169""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppStopEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e2a634f3-dd9c-4bfa-a13b-75125ea5f169", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/3565650f-7976-43b6-aa8c-7bdf308cde34", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-235", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e415533a-c4d5-4ed6-9e94-87386d5ff297", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("v3-app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1182", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e2a634f3-dd9c-4bfa-a13b-75125ea5f169", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e2a634f3-dd9c-4bfa-a13b-75125ea5f169", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppSshUnauthorizedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2be1514f-b527-435a-bd63-a79ad7d52839"",
        ""url"": ""/v2/events/463b52ae-587b-4549-b08a-e04e341f087e"",
        ""created_at"": ""2016-04-11T13:33:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-267"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""89f22804-ddae-4830-a933-adddd8cdc3cd"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1619"",
        ""timestamp"": ""2016-04-11T13:33:11Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""2be1514f-b527-435a-bd63-a79ad7d52839"",
        ""organization_guid"": ""2be1514f-b527-435a-bd63-a79ad7d52839""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppSshUnauthorizedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2be1514f-b527-435a-bd63-a79ad7d52839", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/463b52ae-587b-4549-b08a-e04e341f087e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-267", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("89f22804-ddae-4830-a933-adddd8cdc3cd", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1619", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("2be1514f-b527-435a-bd63-a79ad7d52839", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("2be1514f-b527-435a-bd63-a79ad7d52839", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8e040dbb-927a-4bb3-afbb-8c7d6e5e021b"",
        ""url"": ""/v2/events/3989645b-9d21-49b1-bc06-a0c7bfbf91b6"",
        ""created_at"": ""2016-04-11T13:33:08Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.delete-request"",
        ""actor"": ""uaa-id-227"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0b7a31ee-5a66-49c3-b742-84f98a420c8a"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-33"",
        ""timestamp"": ""2016-04-11T13:33:08Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""8e040dbb-927a-4bb3-afbb-8c7d6e5e021b"",
        ""organization_guid"": ""8e040dbb-927a-4bb3-afbb-8c7d6e5e021b""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("8e040dbb-927a-4bb3-afbb-8c7d6e5e021b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/3989645b-9d21-49b1-bc06-a0c7bfbf91b6", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-227", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0b7a31ee-5a66-49c3-b742-84f98a420c8a", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-33", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:08Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("8e040dbb-927a-4bb3-afbb-8c7d6e5e021b", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("8e040dbb-927a-4bb3-afbb-8c7d6e5e021b", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListRouteCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""decc36ab-9860-4ba9-82d7-3407a9bf3f4b"",
        ""url"": ""/v2/events/46889f37-fb8f-408e-90dd-9f724b66b966"",
        ""created_at"": ""2016-04-11T13:33:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.route.create"",
        ""actor"": ""uaa-id-259"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""336c7ae1-d3a6-4a55-8ddc-4fde668cd722"",
        ""actee_type"": ""route"",
        ""actee_name"": ""host-35"",
        ""timestamp"": ""2016-04-11T13:33:11Z"",
        ""metadata"": {
          ""request"": {
            ""host"": ""dora"",
            ""domain_guid"": ""decc36ab-9860-4ba9-82d7-3407a9bf3f4b"",
            ""space_guid"": ""decc36ab-9860-4ba9-82d7-3407a9bf3f4b""
          }
        },
        ""space_guid"": ""decc36ab-9860-4ba9-82d7-3407a9bf3f4b"",
        ""organization_guid"": ""decc36ab-9860-4ba9-82d7-3407a9bf3f4b""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListRouteCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("decc36ab-9860-4ba9-82d7-3407a9bf3f4b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/46889f37-fb8f-408e-90dd-9f724b66b966", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.route.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-259", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("336c7ae1-d3a6-4a55-8ddc-4fde668cd722", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("route", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("host-35", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("decc36ab-9860-4ba9-82d7-3407a9bf3f4b", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("decc36ab-9860-4ba9-82d7-3407a9bf3f4b", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListEventsAssociatedWithAppSinceJanuary12014Test()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79"",
        ""url"": ""/v2/events/165aadef-5b90-49a9-94da-21aa867e8bfc"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-241"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""06aa6432-341c-4b02-8fa7-60a39512ecdc"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1263"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79"",
        ""organization_guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79"",
        ""url"": ""/v2/events/8ce4cbdf-32e8-497e-92e4-025fd1c0b4a8"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-241"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""06aa6432-341c-4b02-8fa7-60a39512ecdc"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1263"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79"",
        ""organization_guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79"",
        ""url"": ""/v2/events/2913c840-e4e9-4f3f-b9d3-05b84dde5420"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-241"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""06aa6432-341c-4b02-8fa7-60a39512ecdc"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1263"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79"",
        ""organization_guid"": ""9c7d6fb0-fb35-4d03-ad35-8a390feebf79""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListEventsAssociatedWithAppSinceJanuary12014().Result;

                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/165aadef-5b90-49a9-94da-21aa867e8bfc", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-241", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("06aa6432-341c-4b02-8fa7-60a39512ecdc", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1263", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/8ce4cbdf-32e8-497e-92e4-025fd1c0b4a8", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("uaa-id-241", TestUtil.ToTestableString(obj[1].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[1].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[1].ActorName), true);
                Assert.AreEqual("06aa6432-341c-4b02-8fa7-60a39512ecdc", TestUtil.ToTestableString(obj[1].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[1].ActeeType), true);
                Assert.AreEqual("name-1263", TestUtil.ToTestableString(obj[1].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[1].Timestamp), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[1].SpaceGuid), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[1].OrganizationGuid), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/2913c840-e4e9-4f3f-b9d3-05b84dde5420", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[2].Type), true);
                Assert.AreEqual("uaa-id-241", TestUtil.ToTestableString(obj[2].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[2].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[2].ActorName), true);
                Assert.AreEqual("06aa6432-341c-4b02-8fa7-60a39512ecdc", TestUtil.ToTestableString(obj[2].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[2].ActeeType), true);
                Assert.AreEqual("name-1263", TestUtil.ToTestableString(obj[2].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[2].Timestamp), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[2].SpaceGuid), true);
                Assert.AreEqual("9c7d6fb0-fb35-4d03-ad35-8a390feebf79", TestUtil.ToTestableString(obj[2].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceInstanceDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c41d108f-dfaf-4f00-a29c-9c8fcf0de19a"",
        ""url"": ""/v2/events/274002b2-761a-4786-8a80-c31d19e61fdd"",
        ""created_at"": ""2016-04-11T13:33:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-253"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7053e2f2-6f6f-450a-b78e-e2de5df6d4e9"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1425"",
        ""timestamp"": ""2016-04-11T13:33:10Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""c41d108f-dfaf-4f00-a29c-9c8fcf0de19a"",
        ""organization_guid"": ""c41d108f-dfaf-4f00-a29c-9c8fcf0de19a""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceInstanceDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("c41d108f-dfaf-4f00-a29c-9c8fcf0de19a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/274002b2-761a-4786-8a80-c31d19e61fdd", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-253", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("7053e2f2-6f6f-450a-b78e-e2de5df6d4e9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1425", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("c41d108f-dfaf-4f00-a29c-9c8fcf0de19a", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("c41d108f-dfaf-4f00-a29c-9c8fcf0de19a", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d7fe4052-79d3-456e-9629-3c8aa069cad2"",
        ""url"": ""/v2/events/4b46758a-94af-4156-8329-5b7fe784dd34"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-243"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9c95e5e2-88b9-4c87-a4ff-afef6048eed0"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1292"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""d7fe4052-79d3-456e-9629-3c8aa069cad2"",
        ""organization_guid"": ""d7fe4052-79d3-456e-9629-3c8aa069cad2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d7fe4052-79d3-456e-9629-3c8aa069cad2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/4b46758a-94af-4156-8329-5b7fe784dd34", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-243", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("9c95e5e2-88b9-4c87-a4ff-afef6048eed0", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1292", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("d7fe4052-79d3-456e-9629-3c8aa069cad2", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d7fe4052-79d3-456e-9629-3c8aa069cad2", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListUserProvidedServiceInstanceCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e78507e7-86b1-4460-af27-7fe415626dda"",
        ""url"": ""/v2/events/391cd4df-aa41-451b-a9d8-41ed0096fa6a"",
        ""created_at"": ""2016-04-11T13:33:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-283"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""392715f8-28f3-4b23-a81e-ffd32a31d263"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1842"",
        ""timestamp"": ""2016-04-11T13:33:13Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1842"",
            ""space_guid"": ""e78507e7-86b1-4460-af27-7fe415626dda""
          }
        },
        ""space_guid"": ""e78507e7-86b1-4460-af27-7fe415626dda"",
        ""organization_guid"": ""e78507e7-86b1-4460-af27-7fe415626dda""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListUserProvidedServiceInstanceCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e78507e7-86b1-4460-af27-7fe415626dda", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/391cd4df-aa41-451b-a9d8-41ed0096fa6a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-283", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("392715f8-28f3-4b23-a81e-ffd32a31d263", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1842", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("e78507e7-86b1-4460-af27-7fe415626dda", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("e78507e7-86b1-4460-af27-7fe415626dda", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppExitedEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6fe28e7f-4bca-466e-bf87-133061adc628"",
        ""url"": ""/v2/events/b100e497-1014-473c-8d3c-c3f610592af7"",
        ""created_at"": ""2016-04-11T13:33:13Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""e7b3f85b-6a74-4051-ab08-b755c783cf00"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1990"",
        ""actee"": ""e7b3f85b-6a74-4051-ab08-b755c783cf00"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1990"",
        ""timestamp"": ""2016-04-11T13:33:13Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""6fe28e7f-4bca-466e-bf87-133061adc628"",
        ""organization_guid"": ""6fe28e7f-4bca-466e-bf87-133061adc628""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppExitedEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6fe28e7f-4bca-466e-bf87-133061adc628", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b100e497-1014-473c-8d3c-c3f610592af7", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("app.crash", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("e7b3f85b-6a74-4051-ab08-b755c783cf00", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1990", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("e7b3f85b-6a74-4051-ab08-b755c783cf00", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1990", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:13Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("6fe28e7f-4bca-466e-bf87-133061adc628", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("6fe28e7f-4bca-466e-bf87-133061adc628", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceDashboardClientDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6c59afe8-49a7-4725-aa15-e1878664683f"",
        ""url"": ""/v2/events/5499a971-5aac-49cc-96bf-3bfba0835979"",
        ""created_at"": ""2016-04-11T13:33:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""75353d38-4945-461e-93c7-a7032b381b39"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1374"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-04-11T13:33:10Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceDashboardClientDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("6c59afe8-49a7-4725-aa15-e1878664683f", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/5499a971-5aac-49cc-96bf-3bfba0835979", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("75353d38-4945-461e-93c7-a7032b381b39", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("service_broker", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("name-1374", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("client_id", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f19a5485-a3ab-446b-9a83-e0dddd01b63b"",
        ""url"": ""/v2/events/a549909e-dc9e-4e98-ac28-dcfb26e622a2"",
        ""created_at"": ""2016-04-11T13:33:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-281"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0261cca9-6094-4152-a406-b30b32530ef9"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-04-11T13:33:12Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""f19a5485-a3ab-446b-9a83-e0dddd01b63b"",
        ""organization_guid"": ""f19a5485-a3ab-446b-9a83-e0dddd01b63b""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("f19a5485-a3ab-446b-9a83-e0dddd01b63b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/a549909e-dc9e-4e98-ac28-dcfb26e622a2", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-281", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("0261cca9-6094-4152-a406-b30b32530ef9", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("f19a5485-a3ab-446b-9a83-e0dddd01b63b", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("f19a5485-a3ab-446b-9a83-e0dddd01b63b", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServicePlanVisibilityCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d145215e-bdf1-46cc-92bf-593d4504978d"",
        ""url"": ""/v2/events/afb8e7ea-954d-478d-a39f-24c6cdbd48e8"",
        ""created_at"": ""2016-04-11T13:33:12Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-277"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b7fd23c9-fecf-4910-a146-34ada4931691"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-04-11T13:33:12Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""d145215e-bdf1-46cc-92bf-593d4504978d"",
            ""organization_guid"": ""d145215e-bdf1-46cc-92bf-593d4504978d""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""d145215e-bdf1-46cc-92bf-593d4504978d""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServicePlanVisibilityCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("d145215e-bdf1-46cc-92bf-593d4504978d", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/afb8e7ea-954d-478d-a39f-24c6cdbd48e8", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-277", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("b7fd23c9-fecf-4910-a146-34ada4931691", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:12Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("d145215e-bdf1-46cc-92bf-593d4504978d", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListServiceBindingCreateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b1a42808-fd33-4984-aa52-b64537c666a8"",
        ""url"": ""/v2/events/12e20400-2619-4ddf-a9d6-c563a583f908"",
        ""created_at"": ""2016-04-11T13:33:11Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-265"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""2de3f4fb-90f3-4079-a1d7-f6382175ad95"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-04-11T13:33:11Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""b1a42808-fd33-4984-aa52-b64537c666a8"",
            ""app_guid"": ""b1a42808-fd33-4984-aa52-b64537c666a8""
          }
        },
        ""space_guid"": ""b1a42808-fd33-4984-aa52-b64537c666a8"",
        ""organization_guid"": ""b1a42808-fd33-4984-aa52-b64537c666a8""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListServiceBindingCreateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b1a42808-fd33-4984-aa52-b64537c666a8", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/12e20400-2619-4ddf-a9d6-c563a583f908", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-265", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("2de3f4fb-90f3-4079-a1d7-f6382175ad95", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("service_binding", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:11Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("b1a42808-fd33-4984-aa52-b64537c666a8", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("b1a42808-fd33-4984-aa52-b64537c666a8", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListAppDeleteEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""edc15d3b-778b-4a04-87dc-c3ed9d491214"",
        ""url"": ""/v2/events/b59c2430-2021-4df6-9804-226e1d072377"",
        ""created_at"": ""2016-04-11T13:33:10Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-247"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""306a6a83-0a68-464a-8f95-413a0cad30c4"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1344"",
        ""timestamp"": ""2016-04-11T13:33:10Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""edc15d3b-778b-4a04-87dc-c3ed9d491214"",
        ""organization_guid"": ""edc15d3b-778b-4a04-87dc-c3ed9d491214""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListAppDeleteEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("edc15d3b-778b-4a04-87dc-c3ed9d491214", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/b59c2430-2021-4df6-9804-226e1d072377", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-247", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("306a6a83-0a68-464a-8f95-413a0cad30c4", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("app", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1344", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:10Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("edc15d3b-778b-4a04-87dc-c3ed9d491214", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("edc15d3b-778b-4a04-87dc-c3ed9d491214", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

        [TestMethod]
        public void ListSpaceUpdateEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""af698e78-b6e0-4b3f-8a9d-882bfcdeaea6"",
        ""url"": ""/v2/events/fa7508ce-5dd6-46a7-9294-e674606a171a"",
        ""created_at"": ""2016-04-11T13:33:09Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-233"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5ae287f6-cf05-48aa-8832-a8cb083ef1b0"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1155"",
        ""timestamp"": ""2016-04-11T13:33:09Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""af698e78-b6e0-4b3f-8a9d-882bfcdeaea6"",
        ""organization_guid"": ""af698e78-b6e0-4b3f-8a9d-882bfcdeaea6""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.Events.ListSpaceUpdateEvents().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("af698e78-b6e0-4b3f-8a9d-882bfcdeaea6", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/events/fa7508ce-5dd6-46a7-9294-e674606a171a", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("uaa-id-233", TestUtil.ToTestableString(obj[0].Actor), true);
                Assert.AreEqual("user", TestUtil.ToTestableString(obj[0].ActorType), true);
                Assert.AreEqual("user@example.com", TestUtil.ToTestableString(obj[0].ActorName), true);
                Assert.AreEqual("5ae287f6-cf05-48aa-8832-a8cb083ef1b0", TestUtil.ToTestableString(obj[0].Actee), true);
                Assert.AreEqual("space", TestUtil.ToTestableString(obj[0].ActeeType), true);
                Assert.AreEqual("name-1155", TestUtil.ToTestableString(obj[0].ActeeName), true);
                Assert.AreEqual("2016-04-11T13:33:09Z", TestUtil.ToTestableString(obj[0].Timestamp), true);
                Assert.AreEqual("af698e78-b6e0-4b3f-8a9d-882bfcdeaea6", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("af698e78-b6e0-4b3f-8a9d-882bfcdeaea6", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);

            }
        }

    }
}