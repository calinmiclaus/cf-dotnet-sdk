//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBindingsEndpoint
{
        [TestMethod]
        public void DeleteServiceBindingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServiceBindings.DeleteServiceBinding(guid).Wait();

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""decff622-f897-450b-ad41-eccbdcfe59b2"",
        ""url"": ""/v2/service_bindings/ca933961-56a0-4351-b784-13c72d628a79"",
        ""created_at"": ""2016-04-11T13:33:04Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""decff622-f897-450b-ad41-eccbdcfe59b2"",
        ""service_instance_guid"": ""decff622-f897-450b-ad41-eccbdcfe59b2"",
        ""credentials"": {
          ""creds-key-42"": ""creds-val-42""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/c293373f-834c-4c2e-b7a4-a4de26fdd313"",
        ""service_instance_url"": ""/v2/service_instances/bc4738e3-7306-44ce-a830-e943372157ba""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceBindings.ListAllServiceBindings().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("decff622-f897-450b-ad41-eccbdcfe59b2", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/ca933961-56a0-4351-b784-13c72d628a79", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:04Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("decff622-f897-450b-ad41-eccbdcfe59b2", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("decff622-f897-450b-ad41-eccbdcfe59b2", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/c293373f-834c-4c2e-b7a4-a4de26fdd313", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/bc4738e3-7306-44ce-a830-e943372157ba", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceBindingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""ddbbedf9-ae38-40bd-9393-6489574edbe8"",
    ""url"": ""/v2/service_bindings/4a9c5c82-1bac-425d-af99-6a7e0c4cb0e0"",
    ""created_at"": ""2016-04-11T13:33:03Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_guid"": ""ddbbedf9-ae38-40bd-9393-6489574edbe8"",
    ""service_instance_guid"": ""ddbbedf9-ae38-40bd-9393-6489574edbe8"",
    ""credentials"": {
      ""creds-key-35"": ""creds-val-35""
    },
    ""binding_options"": {

    },
    ""gateway_data"": null,
    ""gateway_name"": """",
    ""syslog_drain_url"": null,
    ""app_url"": ""/v2/apps/04c289ae-95c9-4986-b02d-b9de0ea8708d"",
    ""service_instance_url"": ""/v2/service_instances/5817e934-9eaf-4718-90f8-58a83f7b7b4c""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceBindings.RetrieveServiceBinding(guid).Result;


                Assert.AreEqual("ddbbedf9-ae38-40bd-9393-6489574edbe8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/4a9c5c82-1bac-425d-af99-6a7e0c4cb0e0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:03Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("ddbbedf9-ae38-40bd-9393-6489574edbe8", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("ddbbedf9-ae38-40bd-9393-6489574edbe8", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/04c289ae-95c9-4986-b02d-b9de0ea8708d", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/service_instances/5817e934-9eaf-4718-90f8-58a83f7b7b4c", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceBindingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""30274e78-bae8-4a1a-bdb0-20cdb7301a39"",
    ""url"": ""/v2/service_bindings/afe0e745-f4dc-4775-9367-66920f45245a"",
    ""created_at"": ""2016-04-11T13:33:03Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_guid"": ""30274e78-bae8-4a1a-bdb0-20cdb7301a39"",
    ""service_instance_guid"": ""30274e78-bae8-4a1a-bdb0-20cdb7301a39"",
    ""credentials"": {
      ""creds-key-39"": ""creds-val-39""
    },
    ""binding_options"": {

    },
    ""gateway_data"": null,
    ""gateway_name"": """",
    ""syslog_drain_url"": null,
    ""app_url"": ""/v2/apps/7d80b07e-6f8e-49eb-8735-25fcd6165dd7"",
    ""service_instance_url"": ""/v2/user_provided_service_instances/1b30b513-0fd0-418e-a0fd-20978d6a2fae""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceBindingRequest value = new CreateServiceBindingRequest();


                var obj = cfClient.ServiceBindings.CreateServiceBinding(value).Result;


                Assert.AreEqual("30274e78-bae8-4a1a-bdb0-20cdb7301a39", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/afe0e745-f4dc-4775-9367-66920f45245a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:03Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("30274e78-bae8-4a1a-bdb0-20cdb7301a39", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("30274e78-bae8-4a1a-bdb0-20cdb7301a39", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/7d80b07e-6f8e-49eb-8735-25fcd6165dd7", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/1b30b513-0fd0-418e-a0fd-20978d6a2fae", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

    }
}