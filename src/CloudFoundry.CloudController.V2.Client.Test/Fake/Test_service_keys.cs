//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceKeysEndpoint
{
        [TestMethod]
        public void CreateServiceKeyTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""d225e5fb-cee7-4811-8749-564de8285312"",
    ""url"": ""/v2/service_keys/921780f2-93c3-4a07-bb04-01c2edf9ccfc"",
    ""created_at"": ""2016-04-11T13:33:04Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-780"",
    ""service_instance_guid"": ""d225e5fb-cee7-4811-8749-564de8285312"",
    ""credentials"": {
      ""creds-key-47"": ""creds-val-47""
    },
    ""service_instance_url"": ""/v2/service_instances/162d8b2f-13bd-45d0-8401-e6aa6902e70b""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceKeyRequest value = new CreateServiceKeyRequest();


                var obj = cfClient.ServiceKeys.CreateServiceKey(value).Result;


                Assert.AreEqual("d225e5fb-cee7-4811-8749-564de8285312", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_keys/921780f2-93c3-4a07-bb04-01c2edf9ccfc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:04Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-780", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("d225e5fb-cee7-4811-8749-564de8285312", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("/v2/service_instances/162d8b2f-13bd-45d0-8401-e6aa6902e70b", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceKeysTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e84955b9-714d-4985-9917-15c3dd9ed84a"",
        ""url"": ""/v2/service_keys/8eb568c5-8cf6-4476-98c4-7a8b481d2315"",
        ""created_at"": ""2016-04-11T13:33:04Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-767"",
        ""service_instance_guid"": ""e84955b9-714d-4985-9917-15c3dd9ed84a"",
        ""credentials"": {
          ""creds-key-45"": ""creds-val-45""
        },
        ""service_instance_url"": ""/v2/service_instances/2c2d855a-6604-46e7-a528-63c89dd113a2""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceKeys.ListAllServiceKeys().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("e84955b9-714d-4985-9917-15c3dd9ed84a", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_keys/8eb568c5-8cf6-4476-98c4-7a8b481d2315", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:04Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-767", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("e84955b9-714d-4985-9917-15c3dd9ed84a", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("/v2/service_instances/2c2d855a-6604-46e7-a528-63c89dd113a2", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceKeyTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServiceKeys.DeleteServiceKey(guid).Wait();

            }
        }

        [TestMethod]
        public void RetrieveServiceKeyTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""4732ea93-66db-4650-a15e-6ef64ba258aa"",
    ""url"": ""/v2/service_keys/af523963-9965-4862-9047-e4e63257dd1d"",
    ""created_at"": ""2016-04-11T13:33:04Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-793"",
    ""service_instance_guid"": ""4732ea93-66db-4650-a15e-6ef64ba258aa"",
    ""credentials"": {
      ""creds-key-51"": ""creds-val-51""
    },
    ""service_instance_url"": ""/v2/service_instances/0ac1ac69-2520-4a93-bf96-7b90ff80677d""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceKeys.RetrieveServiceKey(guid).Result;


                Assert.AreEqual("4732ea93-66db-4650-a15e-6ef64ba258aa", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_keys/af523963-9965-4862-9047-e4e63257dd1d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-04-11T13:33:04Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-793", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("4732ea93-66db-4650-a15e-6ef64ba258aa", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("/v2/service_instances/0ac1ac69-2520-4a93-bf96-7b90ff80677d", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

    }
}