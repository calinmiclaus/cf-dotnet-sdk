//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""22cbd151-2000-4080-b790-cd96ac6172cf"",
    ""url"": ""/v2/shared_domains/fd7602b9-13d6-4e2d-b97f-0a84a7887704"",
    ""created_at"": ""2016-04-11T13:32:37Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""router_group_guid"": ""22cbd151-2000-4080-b790-cd96ac6172cf"",
    ""router_group_type"": ""tcp""
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("22cbd151-2000-4080-b790-cd96ac6172cf", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/fd7602b9-13d6-4e2d-b97f-0a84a7887704", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:37Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("22cbd151-2000-4080-b790-cd96ac6172cf", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""53a39735-3f98-4bc9-b62d-d7f9e238ac64"",
    ""url"": ""/v2/shared_domains/75a3d5fc-14dd-41fa-9b0a-7f3cd31db318"",
    ""created_at"": ""2016-04-11T13:32:30Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com"",
    ""router_group_guid"": null,
    ""router_group_type"": null
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("53a39735-3f98-4bc9-b62d-d7f9e238ac64", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/75a3d5fc-14dd-41fa-9b0a-7f3cd31db318", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:30Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }

        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b6bfd808-e5be-4443-88ba-9598f35545dc"",
        ""url"": ""/v2/shared_domains/3c0910fd-af72-4ec9-aae5-9b6925116098"",
        ""created_at"": ""2016-04-11T13:32:37Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""shared-domain.com"",
        ""router_group_guid"": ""b6bfd808-e5be-4443-88ba-9598f35545dc"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b6bfd808-e5be-4443-88ba-9598f35545dc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/3c0910fd-af72-4ec9-aae5-9b6925116098", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:37Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b6bfd808-e5be-4443-88ba-9598f35545dc", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[0].RouterGroupType), true);
        }

        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 6,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""16d3ab29-70d3-4af4-b918-add33ce9d6f2"",
        ""url"": ""/v2/shared_domains/75a3d5fc-14dd-41fa-9b0a-7f3cd31db318"",
        ""created_at"": ""2016-04-11T13:32:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""16d3ab29-70d3-4af4-b918-add33ce9d6f2"",
        ""url"": ""/v2/shared_domains/2679bfb5-a856-4598-8fcc-20c0271c66ad"",
        ""created_at"": ""2016-04-11T13:32:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""16d3ab29-70d3-4af4-b918-add33ce9d6f2"",
        ""url"": ""/v2/shared_domains/f01afd28-3dd6-4a30-83fe-16f94516e26f"",
        ""created_at"": ""2016-04-11T13:32:37Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-17.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""16d3ab29-70d3-4af4-b918-add33ce9d6f2"",
        ""url"": ""/v2/shared_domains/63013046-9d4e-40c2-ae0c-84f051d62615"",
        ""created_at"": ""2016-04-11T13:32:37Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-18.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""16d3ab29-70d3-4af4-b918-add33ce9d6f2"",
        ""url"": ""/v2/shared_domains/4a2a7e52-57e9-4c67-be44-0c7267c955e6"",
        ""created_at"": ""2016-04-11T13:32:37Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-19.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""16d3ab29-70d3-4af4-b918-add33ce9d6f2"",
        ""url"": ""/v2/shared_domains/92d0951c-7204-4614-9e88-1d0478570c76"",
        ""created_at"": ""2016-04-11T13:32:37Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-20.example.com"",
        ""router_group_guid"": ""16d3ab29-70d3-4af4-b918-add33ce9d6f2"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json, null);

            Assert.AreEqual("6", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("16d3ab29-70d3-4af4-b918-add33ce9d6f2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/75a3d5fc-14dd-41fa-9b0a-7f3cd31db318", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupType), true);
            Assert.AreEqual("16d3ab29-70d3-4af4-b918-add33ce9d6f2", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/2679bfb5-a856-4598-8fcc-20c0271c66ad", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:30Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupType), true);
            Assert.AreEqual("16d3ab29-70d3-4af4-b918-add33ce9d6f2", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/f01afd28-3dd6-4a30-83fe-16f94516e26f", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:37Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-17.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupType), true);
            Assert.AreEqual("16d3ab29-70d3-4af4-b918-add33ce9d6f2", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/63013046-9d4e-40c2-ae0c-84f051d62615", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:37Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-18.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupType), true);
            Assert.AreEqual("16d3ab29-70d3-4af4-b918-add33ce9d6f2", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/4a2a7e52-57e9-4c67-be44-0c7267c955e6", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:37Z", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-19.example.com", TestUtil.ToTestableString(page[4].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupType), true);
            Assert.AreEqual("16d3ab29-70d3-4af4-b918-add33ce9d6f2", TestUtil.ToTestableString(page[5].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/92d0951c-7204-4614-9e88-1d0478570c76", TestUtil.ToTestableString(page[5].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:37Z", TestUtil.ToTestableString(page[5].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[5].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-20.example.com", TestUtil.ToTestableString(page[5].Name), true);
            Assert.AreEqual("16d3ab29-70d3-4af4-b918-add33ce9d6f2", TestUtil.ToTestableString(page[5].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[5].RouterGroupType), true);
        }
    }
}
