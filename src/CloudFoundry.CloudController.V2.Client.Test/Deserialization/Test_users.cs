//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9b33c831-50a7-4b31-9706-02296c330e20"",
    ""url"": ""/v2/users/uaa-id-341"",
    ""created_at"": ""2016-04-11T13:33:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""9b33c831-50a7-4b31-9706-02296c330e20"",
    ""default_space_url"": ""/v2/spaces/994ccb32-bece-472e-a57b-d5caf7c23640"",
    ""spaces_url"": ""/v2/users/uaa-id-341/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-341/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-341/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-341/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-341/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-341/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-341/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("9b33c831-50a7-4b31-9706-02296c330e20", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-341", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("9b33c831-50a7-4b31-9706-02296c330e20", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/994ccb32-bece-472e-a57b-d5caf7c23640", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-341/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-341/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-341/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-341/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-341/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-341/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-341/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
    ""created_at"": ""2016-04-11T13:33:07Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""organizations"": [
      {
        ""metadata"": {
          ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
          ""created_at"": ""2016-04-11T13:33:07Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-894"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-896""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
              ""created_at"": ""2016-04-11T13:33:07Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-895"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
          ""created_at"": ""2016-04-11T13:33:07Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-894"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-896""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
              ""created_at"": ""2016-04-11T13:33:07Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-895"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""billing_managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
          ""created_at"": ""2016-04-11T13:33:07Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-894"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-896""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
              ""created_at"": ""2016-04-11T13:33:07Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-895"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""audited_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
          ""created_at"": ""2016-04-11T13:33:07Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-894"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-896""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
              ""created_at"": ""2016-04-11T13:33:07Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-895"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
                ""created_at"": ""2016-04-11T13:33:07Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""spaces"": [
      {
        ""metadata"": {
          ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
          ""created_at"": ""2016-04-11T13:33:07Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-896""
        }
      }
    ],
    ""managed_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
          ""created_at"": ""2016-04-11T13:33:07Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-896""
        }
      }
    ],
    ""audited_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""4f3473c3-cc6e-4c82-bcd9-23a985d3045d"",
          ""created_at"": ""2016-04-11T13:33:07Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-896""
        }
      }
    ]
  }
}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("4f3473c3-cc6e-4c82-bcd9-23a985d3045d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-04-11T13:33:07Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7c3b9e66-efcb-4d99-bbcf-c8e451237121"",
    ""url"": ""/v2/users/uaa-id-324"",
    ""created_at"": ""2016-04-11T13:33:15Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""7c3b9e66-efcb-4d99-bbcf-c8e451237121"",
    ""default_space_url"": ""/v2/spaces/8dc593cd-c907-43ae-b6bf-90d05c05a372"",
    ""spaces_url"": ""/v2/users/uaa-id-324/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-324/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-324/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-324/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-324/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-324/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-324/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("7c3b9e66-efcb-4d99-bbcf-c8e451237121", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-324", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("7c3b9e66-efcb-4d99-bbcf-c8e451237121", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/8dc593cd-c907-43ae-b6bf-90d05c05a372", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-324/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""21120801-fc9f-40fb-8133-4e57bee250b2"",
    ""url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2"",
    ""created_at"": ""2016-04-11T13:33:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/spaces"",
    ""organizations_url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/organizations"",
    ""managed_organizations_url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("21120801-fc9f-40fb-8133-4e57bee250b2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/5fbec775-02f7-4250-a19f-ebff2f1fb9d2/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d846e423-ef09-4c07-be88-cf3f84228532"",
    ""url"": ""/v2/users/uaa-id-320"",
    ""created_at"": ""2016-04-11T13:33:15Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""d846e423-ef09-4c07-be88-cf3f84228532"",
    ""default_space_url"": ""/v2/spaces/2c0b6c14-48fa-451e-92c2-356fc0ba0607"",
    ""spaces_url"": ""/v2/users/uaa-id-320/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-320/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-320/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-320/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-320/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-320/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-320/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("d846e423-ef09-4c07-be88-cf3f84228532", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-320", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("d846e423-ef09-4c07-be88-cf3f84228532", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/2c0b6c14-48fa-451e-92c2-356fc0ba0607", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-320/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-320/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-320/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-320/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-320/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-320/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-320/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3b0cdcf0-a228-4068-bb35-4e5523048238"",
        ""url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d"",
        ""created_at"": ""2016-04-11T13:33:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2177"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""3b0cdcf0-a228-4068-bb35-4e5523048238"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/78938094-b107-4f09-a9b4-fe97a33c6a6c"",
        ""spaces_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/spaces"",
        ""domains_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/domains"",
        ""private_domains_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/private_domains"",
        ""users_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/users"",
        ""managers_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/managers"",
        ""billing_managers_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/billing_managers"",
        ""auditors_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/auditors"",
        ""app_events_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3b0cdcf0-a228-4068-bb35-4e5523048238", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:15Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2177", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("3b0cdcf0-a228-4068-bb35-4e5523048238", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/78938094-b107-4f09-a9b4-fe97a33c6a6c", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/f3a334fe-2149-4b6b-8f41-71a790074d4d/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8bcd4461-437b-4bbf-83bc-f64c5f7569dd"",
    ""url"": ""/v2/users/uaa-id-314"",
    ""created_at"": ""2016-04-11T13:33:15Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""8bcd4461-437b-4bbf-83bc-f64c5f7569dd"",
    ""default_space_url"": ""/v2/spaces/f6e65bef-652e-4ec8-bfd0-1c183ce97d4f"",
    ""spaces_url"": ""/v2/users/uaa-id-314/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-314/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-314/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-314/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-314/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-314/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-314/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("8bcd4461-437b-4bbf-83bc-f64c5f7569dd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-314", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("8bcd4461-437b-4bbf-83bc-f64c5f7569dd", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f6e65bef-652e-4ec8-bfd0-1c183ce97d4f", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-314/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-314/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-314/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-314/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-314/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-314/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-314/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1901325d-7ed3-4b5f-a554-7fdc71320f9b"",
        ""url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce"",
        ""created_at"": ""2016-04-11T13:33:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2152"",
        ""organization_guid"": ""1901325d-7ed3-4b5f-a554-7fdc71320f9b"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/b5558dda-481e-4c62-a181-d745be29adbb"",
        ""developers_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/developers"",
        ""managers_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/managers"",
        ""auditors_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/auditors"",
        ""apps_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/apps"",
        ""routes_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/routes"",
        ""domains_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/domains"",
        ""service_instances_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/service_instances"",
        ""app_events_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/app_events"",
        ""events_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/events"",
        ""security_groups_url"": ""/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1901325d-7ed3-4b5f-a554-7fdc71320f9b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:15Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2152", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("1901325d-7ed3-4b5f-a554-7fdc71320f9b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/b5558dda-481e-4c62-a181-d745be29adbb", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/54d00e19-5691-44c9-bd60-101a4f1ab9ce/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5bb75e2b-9dac-487a-81e7-610826e5962d"",
    ""url"": ""/v2/users/uaa-id-345"",
    ""created_at"": ""2016-04-11T13:33:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""5bb75e2b-9dac-487a-81e7-610826e5962d"",
    ""default_space_url"": ""/v2/spaces/c7bace64-769c-4f07-94c4-c5b205b5d0e9"",
    ""spaces_url"": ""/v2/users/uaa-id-345/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-345/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-345/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-345/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-345/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-345/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-345/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("5bb75e2b-9dac-487a-81e7-610826e5962d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-345", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("5bb75e2b-9dac-487a-81e7-610826e5962d", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c7bace64-769c-4f07-94c4-c5b205b5d0e9", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c9a2fd8a-1597-4e9d-b791-3bb9b6b4cf6e"",
        ""url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc"",
        ""created_at"": ""2016-04-11T13:33:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2211"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""c9a2fd8a-1597-4e9d-b791-3bb9b6b4cf6e"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/72a7d03a-5f13-454b-acaa-5bd1b35bc5d7"",
        ""spaces_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/spaces"",
        ""domains_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/domains"",
        ""private_domains_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/private_domains"",
        ""users_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/users"",
        ""managers_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/managers"",
        ""billing_managers_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/billing_managers"",
        ""auditors_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/auditors"",
        ""app_events_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c9a2fd8a-1597-4e9d-b791-3bb9b6b4cf6e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2211", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("c9a2fd8a-1597-4e9d-b791-3bb9b6b4cf6e", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/72a7d03a-5f13-454b-acaa-5bd1b35bc5d7", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/66d3a829-67ed-4077-a2db-be0ede2531bc/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""be0a5c89-7002-4ddb-8f37-b35f73cf3dc2"",
    ""url"": ""/v2/users/uaa-id-300"",
    ""created_at"": ""2016-04-11T13:33:14Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""be0a5c89-7002-4ddb-8f37-b35f73cf3dc2"",
    ""default_space_url"": ""/v2/spaces/7a1d1b7b-d27e-468d-9f3c-bd66e0ea35f6"",
    ""spaces_url"": ""/v2/users/uaa-id-300/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-300/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-300/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-300/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-300/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-300/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-300/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("be0a5c89-7002-4ddb-8f37-b35f73cf3dc2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-300", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("be0a5c89-7002-4ddb-8f37-b35f73cf3dc2", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/7a1d1b7b-d27e-468d-9f3c-bd66e0ea35f6", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-300/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-300/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-300/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-300/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-300/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-300/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-300/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a710d7d8-6e89-4a3e-aa63-90e7ead96bbe"",
        ""url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e"",
        ""created_at"": ""2016-04-11T13:33:14Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2111"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""a710d7d8-6e89-4a3e-aa63-90e7ead96bbe"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/93c1c7d8-b3c5-4d46-a44e-d313ae40dc50"",
        ""spaces_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/spaces"",
        ""domains_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/domains"",
        ""private_domains_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/private_domains"",
        ""users_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/users"",
        ""managers_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/managers"",
        ""billing_managers_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/billing_managers"",
        ""auditors_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/auditors"",
        ""app_events_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a710d7d8-6e89-4a3e-aa63-90e7ead96bbe", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2111", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("a710d7d8-6e89-4a3e-aa63-90e7ead96bbe", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/93c1c7d8-b3c5-4d46-a44e-d313ae40dc50", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/096116be-4965-4ff3-8b1a-43a26cf3786e/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f61a56db-170a-47f6-8b5a-0144e5c8bf3f"",
    ""url"": ""/v2/users/uaa-id-335"",
    ""created_at"": ""2016-04-11T13:33:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f61a56db-170a-47f6-8b5a-0144e5c8bf3f"",
    ""default_space_url"": ""/v2/spaces/6ccca525-db8d-46dd-85e4-4c3c6d4813cc"",
    ""spaces_url"": ""/v2/users/uaa-id-335/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-335/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-335/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-335/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-335/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-335/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-335/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("f61a56db-170a-47f6-8b5a-0144e5c8bf3f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-335", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f61a56db-170a-47f6-8b5a-0144e5c8bf3f", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/6ccca525-db8d-46dd-85e4-4c3c6d4813cc", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-335/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-335/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-335/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-335/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-335/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-335/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-335/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f4aa413d-2855-4661-81f1-275a185fd575"",
        ""url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4"",
        ""created_at"": ""2016-04-11T13:33:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2182"",
        ""organization_guid"": ""f4aa413d-2855-4661-81f1-275a185fd575"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/be7c8305-438a-4a75-a7d0-3bcab63f8598"",
        ""developers_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/developers"",
        ""managers_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/managers"",
        ""auditors_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/auditors"",
        ""apps_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/apps"",
        ""routes_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/routes"",
        ""domains_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/domains"",
        ""service_instances_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/service_instances"",
        ""app_events_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/app_events"",
        ""events_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/events"",
        ""security_groups_url"": ""/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f4aa413d-2855-4661-81f1-275a185fd575", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:15Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2182", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("f4aa413d-2855-4661-81f1-275a185fd575", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/be7c8305-438a-4a75-a7d0-3bcab63f8598", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/ee72f3c8-c17a-4a25-b66c-1f3b851efae4/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f334ebb7-e677-4045-83ef-209a5b09a092"",
    ""url"": ""/v2/users/uaa-id-306"",
    ""created_at"": ""2016-04-11T13:33:14Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f334ebb7-e677-4045-83ef-209a5b09a092"",
    ""default_space_url"": ""/v2/spaces/a3c4deb1-efc4-4276-aa23-70c4ef8f3c00"",
    ""spaces_url"": ""/v2/users/uaa-id-306/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-306/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-306/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-306/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-306/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-306/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-306/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("f334ebb7-e677-4045-83ef-209a5b09a092", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-306", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f334ebb7-e677-4045-83ef-209a5b09a092", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/a3c4deb1-efc4-4276-aa23-70c4ef8f3c00", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-306/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-306/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-306/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-306/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-306/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-306/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-306/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8795285a-8d3b-492a-a336-e64e5a79092b"",
        ""url"": ""/v2/users/uaa-id-347"",
        ""created_at"": ""2016-04-11T13:33:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""8795285a-8d3b-492a-a336-e64e5a79092b"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/a1f541ca-f9c2-4a37-81da-de1c15e90628"",
        ""spaces_url"": ""/v2/users/uaa-id-347/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-347/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-347/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-347/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-347/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-347/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-347/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8795285a-8d3b-492a-a336-e64e5a79092b"",
        ""url"": ""/v2/users/uaa-id-348"",
        ""created_at"": ""2016-04-11T13:33:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": true,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-348/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-348/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-348/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-348/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-348/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-348/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-348/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8795285a-8d3b-492a-a336-e64e5a79092b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-347", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("8795285a-8d3b-492a-a336-e64e5a79092b", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/a1f541ca-f9c2-4a37-81da-de1c15e90628", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-347/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-347/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-347/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-347/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-347/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-347/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-347/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("8795285a-8d3b-492a-a336-e64e5a79092b", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-348", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-348/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-348/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-348/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-348/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-348/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-348/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-348/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0371f60d-50d7-429f-a826-b3c085a6ef80"",
    ""url"": ""/v2/users/uaa-id-353"",
    ""created_at"": ""2016-04-11T13:33:16Z"",
    ""updated_at"": ""2016-04-11T13:33:16Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""0371f60d-50d7-429f-a826-b3c085a6ef80"",
    ""default_space_url"": ""/v2/spaces/1cc458bf-e2a1-4cf0-ae2d-26f7c6ba190b"",
    ""spaces_url"": ""/v2/users/uaa-id-353/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-353/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-353/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-353/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-353/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-353/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-353/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("0371f60d-50d7-429f-a826-b3c085a6ef80", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-353", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-04-11T13:33:16Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("0371f60d-50d7-429f-a826-b3c085a6ef80", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/1cc458bf-e2a1-4cf0-ae2d-26f7c6ba190b", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""06ec2afe-d317-4f1c-b26c-e60cc9d70177"",
        ""url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415"",
        ""created_at"": ""2016-04-11T13:33:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2128"",
        ""organization_guid"": ""06ec2afe-d317-4f1c-b26c-e60cc9d70177"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/45bac61e-eacc-467b-8bdd-dfebafb21e64"",
        ""developers_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/developers"",
        ""managers_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/managers"",
        ""auditors_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/auditors"",
        ""apps_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/apps"",
        ""routes_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/routes"",
        ""domains_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/domains"",
        ""service_instances_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/service_instances"",
        ""app_events_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/app_events"",
        ""events_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/events"",
        ""security_groups_url"": ""/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("06ec2afe-d317-4f1c-b26c-e60cc9d70177", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:15Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2128", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("06ec2afe-d317-4f1c-b26c-e60cc9d70177", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/45bac61e-eacc-467b-8bdd-dfebafb21e64", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/27e2e66a-7942-413f-b70f-a9d39fed8415/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ecc6bfa2-fdad-4133-b45b-e80d5174071c"",
        ""url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848"",
        ""created_at"": ""2016-04-11T13:33:14Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2094"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""ecc6bfa2-fdad-4133-b45b-e80d5174071c"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/010b7b65-3e04-4e7d-b187-30c40d17a0b5"",
        ""spaces_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/spaces"",
        ""domains_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/domains"",
        ""private_domains_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/private_domains"",
        ""users_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/users"",
        ""managers_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/managers"",
        ""billing_managers_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/billing_managers"",
        ""auditors_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/auditors"",
        ""app_events_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ecc6bfa2-fdad-4133-b45b-e80d5174071c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:14Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2094", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("ecc6bfa2-fdad-4133-b45b-e80d5174071c", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/010b7b65-3e04-4e7d-b187-30c40d17a0b5", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/9a67efff-8ab9-4f4d-bd5d-94aac93cb848/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }
    }
}
