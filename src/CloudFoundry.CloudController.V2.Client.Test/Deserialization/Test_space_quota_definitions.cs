//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsTest
    {


        [TestMethod]
        public void TestCreateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""943d41cd-7fdb-4778-bb2e-ffc89eea3b5a"",
    ""url"": ""/v2/space_quota_definitions/4043077b-d305-4b03-8f81-9a5ad8d019b4"",
    ""created_at"": ""2016-04-11T13:32:56Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""943d41cd-7fdb-4778-bb2e-ffc89eea3b5a"",
    ""non_basic_services_allowed"": true,
    ""total_services"": -1,
    ""total_routes"": -1,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": -1,
    ""organization_url"": ""/v2/organizations/4e370b57-46bc-4ed3-8715-ae565e6bbb48"",
    ""spaces_url"": ""/v2/space_quota_definitions/4043077b-d305-4b03-8f81-9a5ad8d019b4/spaces""
  }
}";

            CreateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<CreateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("943d41cd-7fdb-4778-bb2e-ffc89eea3b5a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/4043077b-d305-4b03-8f81-9a5ad8d019b4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("943d41cd-7fdb-4778-bb2e-ffc89eea3b5a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("/v2/organizations/4e370b57-46bc-4ed3-8715-ae565e6bbb48", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/4043077b-d305-4b03-8f81-9a5ad8d019b4/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0b8aab43-6fe2-42d1-b18a-939306ce53ba"",
        ""url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb"",
        ""created_at"": ""2016-04-11T13:32:56Z"",
        ""updated_at"": ""2016-04-11T13:32:56Z""
      },
      ""entity"": {
        ""name"": ""name-332"",
        ""organization_guid"": ""0b8aab43-6fe2-42d1-b18a-939306ce53ba"",
        ""space_quota_definition_guid"": ""0b8aab43-6fe2-42d1-b18a-939306ce53ba"",
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/e2643b8d-4efa-4aeb-97b9-2bef98739f2d"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/3a5f8b2f-d47b-49dc-9bb6-9d7b53ed001f"",
        ""developers_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/developers"",
        ""managers_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/managers"",
        ""auditors_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/auditors"",
        ""apps_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/apps"",
        ""routes_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/routes"",
        ""domains_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/domains"",
        ""service_instances_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/service_instances"",
        ""app_events_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/app_events"",
        ""events_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/events"",
        ""security_groups_url"": ""/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSpaceQuotaDefinitionResponse> page = Utilities.DeserializePage<ListAllSpacesForSpaceQuotaDefinitionResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0b8aab43-6fe2-42d1-b18a-939306ce53ba", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-332", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("0b8aab43-6fe2-42d1-b18a-939306ce53ba", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("0b8aab43-6fe2-42d1-b18a-939306ce53ba", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/e2643b8d-4efa-4aeb-97b9-2bef98739f2d", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/3a5f8b2f-d47b-49dc-9bb6-9d7b53ed001f", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/8a4645bf-0bf2-48d2-9341-3678c7e475eb/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""08293db0-f42a-429e-a287-74803d13f3b4"",
    ""url"": ""/v2/space_quota_definitions/bbe71777-ddf5-41ce-ac9d-460040455bca"",
    ""created_at"": ""2016-04-11T13:32:56Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-339"",
    ""organization_guid"": ""08293db0-f42a-429e-a287-74803d13f3b4"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": 600,
    ""organization_url"": ""/v2/organizations/fe831369-948e-4ed4-be49-dbe1904c8efd"",
    ""spaces_url"": ""/v2/space_quota_definitions/bbe71777-ddf5-41ce-ac9d-460040455bca/spaces""
  }
}";

            RetrieveSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RetrieveSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("08293db0-f42a-429e-a287-74803d13f3b4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/bbe71777-ddf5-41ce-ac9d-460040455bca", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-339", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("08293db0-f42a-429e-a287-74803d13f3b4", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("/v2/organizations/fe831369-948e-4ed4-be49-dbe1904c8efd", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/bbe71777-ddf5-41ce-ac9d-460040455bca/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cea433d9-0a74-4697-8bbb-fa5f0dc92cea"",
    ""url"": ""/v2/space_quota_definitions/777555ce-13c7-4acd-b61c-3436df6e3e22"",
    ""created_at"": ""2016-04-11T13:32:56Z"",
    ""updated_at"": ""2016-04-11T13:32:56Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""organization_guid"": ""cea433d9-0a74-4697-8bbb-fa5f0dc92cea"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": 600,
    ""organization_url"": ""/v2/organizations/3f4bdd54-a4c7-4dcb-9e43-2c328fbc4525"",
    ""spaces_url"": ""/v2/space_quota_definitions/777555ce-13c7-4acd-b61c-3436df6e3e22/spaces""
  }
}";

            UpdateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<UpdateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("cea433d9-0a74-4697-8bbb-fa5f0dc92cea", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/777555ce-13c7-4acd-b61c-3436df6e3e22", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("cea433d9-0a74-4697-8bbb-fa5f0dc92cea", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("/v2/organizations/3f4bdd54-a4c7-4dcb-9e43-2c328fbc4525", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/777555ce-13c7-4acd-b61c-3436df6e3e22/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5d13def1-9cf0-47c2-80a7-f861d0a9c878"",
        ""url"": ""/v2/space_quota_definitions/96c4bbcf-f585-422e-a8fa-6a3a23ba9c31"",
        ""created_at"": ""2016-04-11T13:32:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-321"",
        ""organization_guid"": ""5d13def1-9cf0-47c2-80a7-f861d0a9c878"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""app_instance_limit"": -1,
        ""app_task_limit"": 5,
        ""total_service_keys"": 600,
        ""organization_url"": ""/v2/organizations/3d5553a1-75c0-4ac1-995b-398c61642f2a"",
        ""spaces_url"": ""/v2/space_quota_definitions/96c4bbcf-f585-422e-a8fa-6a3a23ba9c31/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5d13def1-9cf0-47c2-80a7-f861d0a9c878", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/96c4bbcf-f585-422e-a8fa-6a3a23ba9c31", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-321", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("5d13def1-9cf0-47c2-80a7-f861d0a9c878", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(page[0].AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(page[0].TotalServiceKeys), true);
            Assert.AreEqual("/v2/organizations/3d5553a1-75c0-4ac1-995b-398c61642f2a", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/96c4bbcf-f585-422e-a8fa-6a3a23ba9c31/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ad248638-d09c-42a7-8598-710238b239de"",
    ""url"": ""/v2/space_quota_definitions/45daa8aa-6216-45cd-970d-59d23a11b9d2"",
    ""created_at"": ""2016-04-11T13:32:56Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-334"",
    ""organization_guid"": ""ad248638-d09c-42a7-8598-710238b239de"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": 600,
    ""organization_url"": ""/v2/organizations/b81a003b-bc56-4e59-8dcb-9d81594341e6"",
    ""spaces_url"": ""/v2/space_quota_definitions/45daa8aa-6216-45cd-970d-59d23a11b9d2/spaces""
  }
}";

            AssociateSpaceWithSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("ad248638-d09c-42a7-8598-710238b239de", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/45daa8aa-6216-45cd-970d-59d23a11b9d2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-334", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ad248638-d09c-42a7-8598-710238b239de", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("/v2/organizations/b81a003b-bc56-4e59-8dcb-9d81594341e6", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/45daa8aa-6216-45cd-970d-59d23a11b9d2/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }
    }
}
