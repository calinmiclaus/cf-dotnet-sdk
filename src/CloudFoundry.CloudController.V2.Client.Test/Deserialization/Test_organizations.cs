//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""13148666-73e1-47be-a2c1-b258217d3f88"",
    ""url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f"",
    ""created_at"": ""2016-04-11T13:33:18Z"",
    ""updated_at"": ""2016-04-11T13:33:18Z""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""13148666-73e1-47be-a2c1-b258217d3f88"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/c1450c48-49fb-4853-abba-6b8cff07713c"",
    ""spaces_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/spaces"",
    ""domains_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/domains"",
    ""private_domains_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/private_domains"",
    ""users_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/users"",
    ""managers_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/managers"",
    ""billing_managers_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/billing_managers"",
    ""auditors_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/auditors"",
    ""app_events_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("13148666-73e1-47be-a2c1-b258217d3f88", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("13148666-73e1-47be-a2c1-b258217d3f88", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/c1450c48-49fb-4853-abba-6b8cff07713c", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/3a0e2c43-43e9-485f-b0cf-aa41f93c932f/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9a731bdc-0ac8-4fe1-b2a1-ec844a63d56e"",
    ""url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107"",
    ""created_at"": ""2016-04-11T13:33:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2350"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""9a731bdc-0ac8-4fe1-b2a1-ec844a63d56e"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/4ffd4d52-e8ec-4e94-886c-9984d517483e"",
    ""spaces_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/spaces"",
    ""domains_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/domains"",
    ""private_domains_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/private_domains"",
    ""users_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/users"",
    ""managers_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/managers"",
    ""billing_managers_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/billing_managers"",
    ""auditors_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/auditors"",
    ""app_events_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("9a731bdc-0ac8-4fe1-b2a1-ec844a63d56e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2350", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("9a731bdc-0ac8-4fe1-b2a1-ec844a63d56e", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/4ffd4d52-e8ec-4e94-886c-9984d517483e", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a39f3362-3d66-434a-a91d-19e2d5480107/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{
  ""guid"": ""8636cae0-1e77-43d5-b596-b1d9742ff4f9"",
  ""name"": ""name-350"",
  ""status"": ""active"",
  ""spaces"": [
    {
      ""guid"": ""8636cae0-1e77-43d5-b596-b1d9742ff4f9"",
      ""name"": ""name-352"",
      ""service_count"": 0,
      ""app_count"": 0,
      ""mem_dev_total"": 0,
      ""mem_prod_total"": 0
    }
  ]
}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("8636cae0-1e77-43d5-b596-b1d9742ff4f9", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-350", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a2a5d5d8-4127-41b8-9138-0330a4af4f3d"",
    ""url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1"",
    ""created_at"": ""2016-04-11T13:33:18Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2301"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""a2a5d5d8-4127-41b8-9138-0330a4af4f3d"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/f9e573f9-2f22-4166-8e77-765606654d9a"",
    ""spaces_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/spaces"",
    ""domains_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/domains"",
    ""private_domains_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/private_domains"",
    ""users_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/users"",
    ""managers_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/managers"",
    ""billing_managers_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/billing_managers"",
    ""auditors_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/auditors"",
    ""app_events_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("a2a5d5d8-4127-41b8-9138-0330a4af4f3d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2301", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("a2a5d5d8-4127-41b8-9138-0330a4af4f3d", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/f9e573f9-2f22-4166-8e77-765606654d9a", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/5a19dc13-540d-4017-9a3b-e1464e5eb4e1/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""85e2e2fb-4b2e-4853-9752-9db026012635"",
    ""url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f"",
    ""created_at"": ""2016-04-11T13:33:18Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2281"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""85e2e2fb-4b2e-4853-9752-9db026012635"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/caf8bbaa-0924-4ab1-a4c2-53d301c4374b"",
    ""spaces_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/spaces"",
    ""domains_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/domains"",
    ""private_domains_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/private_domains"",
    ""users_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/users"",
    ""managers_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/managers"",
    ""billing_managers_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/billing_managers"",
    ""auditors_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/auditors"",
    ""app_events_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("85e2e2fb-4b2e-4853-9752-9db026012635", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2281", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("85e2e2fb-4b2e-4853-9752-9db026012635", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/caf8bbaa-0924-4ab1-a4c2-53d301c4374b", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ecfcba36-68b3-49e4-94d0-c269e6979c9f/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""651b17eb-d9d0-433a-a598-3a132a1c0c46"",
        ""url"": ""/v2/users/uaa-id-392"",
        ""created_at"": ""2016-04-11T13:33:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""user@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-392/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-392/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-392/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-392/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-392/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-392/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-392/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("651b17eb-d9d0-433a-a598-3a132a1c0c46", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-392", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-392/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-392/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-392/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-392/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-392/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-392/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-392/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e6eb63c0-3246-474b-9400-734a414118a9"",
    ""url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e"",
    ""created_at"": ""2016-04-11T13:33:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2317"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e6eb63c0-3246-474b-9400-734a414118a9"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/9ee4f557-bdb0-4de2-911b-0428a731358e"",
    ""spaces_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/spaces"",
    ""domains_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/domains"",
    ""private_domains_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/private_domains"",
    ""users_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/users"",
    ""managers_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/managers"",
    ""billing_managers_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/auditors"",
    ""app_events_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("e6eb63c0-3246-474b-9400-734a414118a9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2317", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e6eb63c0-3246-474b-9400-734a414118a9", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/9ee4f557-bdb0-4de2-911b-0428a731358e", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d84bf360-d9a1-427d-a906-ac5307cc988e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""72cb031c-6602-4e49-9f2e-ac4d2ad05478"",
        ""url"": ""/v2/users/uaa-id-412"",
        ""created_at"": ""2016-04-11T13:33:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""auditor@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-412/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-412/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-412/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-412/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-412/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-412/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-412/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("72cb031c-6602-4e49-9f2e-ac4d2ad05478", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-412", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("auditor@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-412/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-412/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""60b72f5f-c68d-4f75-8d63-f2b50b4d2bec"",
    ""url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6"",
    ""created_at"": ""2016-04-11T13:33:18Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2287"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""60b72f5f-c68d-4f75-8d63-f2b50b4d2bec"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/af0052d5-d385-445c-9967-e4dd14433f2f"",
    ""spaces_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/spaces"",
    ""domains_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/domains"",
    ""private_domains_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/private_domains"",
    ""users_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/users"",
    ""managers_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/managers"",
    ""billing_managers_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/billing_managers"",
    ""auditors_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/auditors"",
    ""app_events_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("60b72f5f-c68d-4f75-8d63-f2b50b4d2bec", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2287", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("60b72f5f-c68d-4f75-8d63-f2b50b4d2bec", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/af0052d5-d385-445c-9967-e4dd14433f2f", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/7ae8cd5a-17b1-4331-8b67-7bce1afd56a6/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1038af8e-9392-4736-981b-57feaa6cead8"",
        ""url"": ""/v2/users/uaa-id-419"",
        ""created_at"": ""2016-04-11T13:33:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""billing_manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-419/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-419/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-419/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-419/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-419/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-419/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-419/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1038af8e-9392-4736-981b-57feaa6cead8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-419", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:20Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("billing_manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-419/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-419/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-419/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-419/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-419/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-419/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-419/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ae258fec-c857-4596-a4e6-3a352d6662ec"",
        ""url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f"",
        ""created_at"": ""2016-04-11T13:33:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2307"",
        ""organization_guid"": ""ae258fec-c857-4596-a4e6-3a352d6662ec"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/1986eabc-7028-4134-a45f-6137759dc889"",
        ""developers_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/developers"",
        ""managers_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/managers"",
        ""auditors_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/auditors"",
        ""apps_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/apps"",
        ""routes_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/routes"",
        ""domains_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/domains"",
        ""service_instances_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/service_instances"",
        ""app_events_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/app_events"",
        ""events_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/events"",
        ""security_groups_url"": ""/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ae258fec-c857-4596-a4e6-3a352d6662ec", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2307", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("ae258fec-c857-4596-a4e6-3a352d6662ec", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/1986eabc-7028-4134-a45f-6137759dc889", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/722334f2-4e0d-458e-94a0-61ee3a02826f/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociatePrivateDomainWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3e2c0130-0d57-4474-8e41-62f65fdf1190"",
    ""url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc"",
    ""created_at"": ""2016-04-11T13:33:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2332"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""3e2c0130-0d57-4474-8e41-62f65fdf1190"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/4101bdac-bfaf-46ab-b8e5-91badae8e8aa"",
    ""spaces_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/spaces"",
    ""domains_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/domains"",
    ""private_domains_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/private_domains"",
    ""users_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/users"",
    ""managers_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/managers"",
    ""billing_managers_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/billing_managers"",
    ""auditors_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/auditors"",
    ""app_events_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/space_quota_definitions""
  }
}";

            AssociatePrivateDomainWithOrganizationResponse obj = Utilities.DeserializeJson<AssociatePrivateDomainWithOrganizationResponse>(json);

            Assert.AreEqual("3e2c0130-0d57-4474-8e41-62f65fdf1190", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2332", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("3e2c0130-0d57-4474-8e41-62f65fdf1190", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/4101bdac-bfaf-46ab-b8e5-91badae8e8aa", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/36f1b038-11a2-49f8-967d-8cbba45f33dc/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""72aad5a8-db78-4673-95b0-7084e7a8a0d2"",
    ""url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7"",
    ""created_at"": ""2016-04-11T13:33:18Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2295"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""72aad5a8-db78-4673-95b0-7084e7a8a0d2"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/c6909e7f-1174-4744-8042-5020645300b0"",
    ""spaces_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/spaces"",
    ""domains_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/domains"",
    ""private_domains_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/private_domains"",
    ""users_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/users"",
    ""managers_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/managers"",
    ""billing_managers_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/billing_managers"",
    ""auditors_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/auditors"",
    ""app_events_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("72aad5a8-db78-4673-95b0-7084e7a8a0d2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2295", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("72aad5a8-db78-4673-95b0-7084e7a8a0d2", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/c6909e7f-1174-4744-8042-5020645300b0", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/48c1288c-41f0-40ee-ad94-76be1bc29fd7/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""67a9d041-62c1-4ec6-82d7-69e3d885cab4"",
    ""url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c"",
    ""created_at"": ""2016-04-11T13:33:18Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""67a9d041-62c1-4ec6-82d7-69e3d885cab4"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/b851f2d2-64d8-4d9c-adc4-6a6076275925"",
    ""spaces_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/spaces"",
    ""domains_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/domains"",
    ""private_domains_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/private_domains"",
    ""users_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/users"",
    ""managers_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/managers"",
    ""billing_managers_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/billing_managers"",
    ""auditors_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/auditors"",
    ""app_events_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("67a9d041-62c1-4ec6-82d7-69e3d885cab4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("67a9d041-62c1-4ec6-82d7-69e3d885cab4", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/b851f2d2-64d8-4d9c-adc4-6a6076275925", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e8c3cf38-ed50-434d-87bc-75df7386437c/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""67ccd731-2d74-4e8b-aa07-d7131088609e"",
        ""url"": ""/v2/users/uaa-id-370"",
        ""created_at"": ""2016-04-11T13:33:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-370/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-370/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-370/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-370/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-370/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-370/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-370/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""67ccd731-2d74-4e8b-aa07-d7131088609e"",
        ""url"": ""/v2/users/uaa-id-371"",
        ""created_at"": ""2016-04-11T13:33:18Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-371/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-371/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-371/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-371/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-371/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-371/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-371/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("67ccd731-2d74-4e8b-aa07-d7131088609e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-370", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-370/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-370/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-370/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-370/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-370/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-370/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-370/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("67ccd731-2d74-4e8b-aa07-d7131088609e", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-371", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-371/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-371/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-371/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-371/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-371/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-371/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-371/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""de508c28-5ef5-4edf-b25d-b4587824c7a9"",
        ""url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034"",
        ""created_at"": ""2016-04-11T13:32:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""de508c28-5ef5-4edf-b25d-b4587824c7a9"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/c26400f3-a29a-4ce8-9f28-ed6bef51b24e"",
        ""spaces_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/spaces"",
        ""domains_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/domains"",
        ""private_domains_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/private_domains"",
        ""users_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/users"",
        ""managers_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/managers"",
        ""billing_managers_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/billing_managers"",
        ""auditors_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/auditors"",
        ""app_events_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("de508c28-5ef5-4edf-b25d-b4587824c7a9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("de508c28-5ef5-4edf-b25d-b4587824c7a9", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/c26400f3-a29a-4ce8-9f28-ed6bef51b24e", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a9794d99-0f12-4922-9e83-c1062256f034/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3a8b1fc3-5084-4a85-8f91-15f82af7236a"",
        ""url"": ""/v2/space_quota_definitions/aabeda48-a32f-4d6f-871c-cf2dc404a25d"",
        ""created_at"": ""2016-04-11T13:33:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2312"",
        ""organization_guid"": ""3a8b1fc3-5084-4a85-8f91-15f82af7236a"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""app_instance_limit"": -1,
        ""app_task_limit"": 5,
        ""total_service_keys"": 600,
        ""organization_url"": ""/v2/organizations/1bc10bee-8e9e-42fa-aa4c-af0848d72727"",
        ""spaces_url"": ""/v2/space_quota_definitions/aabeda48-a32f-4d6f-871c-cf2dc404a25d/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3a8b1fc3-5084-4a85-8f91-15f82af7236a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/aabeda48-a32f-4d6f-871c-cf2dc404a25d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2312", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("3a8b1fc3-5084-4a85-8f91-15f82af7236a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(page[0].AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(page[0].TotalServiceKeys), true);
            Assert.AreEqual("/v2/organizations/1bc10bee-8e9e-42fa-aa4c-af0848d72727", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/aabeda48-a32f-4d6f-871c-cf2dc404a25d/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2693bf6f-d3fb-4c95-aa62-32f1cc6a6c85"",
        ""url"": ""/v2/domains/d41c9588-c845-4b1f-9482-53975b920144"",
        ""created_at"": ""2016-04-11T13:32:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2693bf6f-d3fb-4c95-aa62-32f1cc6a6c85"",
        ""url"": ""/v2/domains/f1aeadcc-9b1f-4216-8469-a170c94544d5"",
        ""created_at"": ""2016-04-11T13:32:56Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2693bf6f-d3fb-4c95-aa62-32f1cc6a6c85", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/d41c9588-c845-4b1f-9482-53975b920144", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupType), true);
            Assert.AreEqual("2693bf6f-d3fb-4c95-aa62-32f1cc6a6c85", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/f1aeadcc-9b1f-4216-8469-a170c94544d5", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:56Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupType), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""36b993f0-2326-40fd-88c4-5067ead0b62a"",
    ""url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e"",
    ""created_at"": ""2016-04-11T13:33:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2344"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""36b993f0-2326-40fd-88c4-5067ead0b62a"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/7537c257-bced-4cca-9dd5-1229d3614d1e"",
    ""spaces_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/spaces"",
    ""domains_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/domains"",
    ""private_domains_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/private_domains"",
    ""users_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/users"",
    ""managers_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/managers"",
    ""billing_managers_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/auditors"",
    ""app_events_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("36b993f0-2326-40fd-88c4-5067ead0b62a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2344", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("36b993f0-2326-40fd-88c4-5067ead0b62a", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/7537c257-bced-4cca-9dd5-1229d3614d1e", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/fe0aa7c2-c9aa-4555-a5c6-371aa96aef8e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4f44eb7a-15d2-4133-b281-889e83b470c9"",
    ""url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6"",
    ""created_at"": ""2016-04-11T13:33:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2313"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""4f44eb7a-15d2-4133-b281-889e83b470c9"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/7fe176df-b7d9-4b99-aecb-903cc54ed3e9"",
    ""spaces_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/spaces"",
    ""domains_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/domains"",
    ""private_domains_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/private_domains"",
    ""users_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/users"",
    ""managers_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/managers"",
    ""billing_managers_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/billing_managers"",
    ""auditors_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/auditors"",
    ""app_events_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("4f44eb7a-15d2-4133-b281-889e83b470c9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2313", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("4f44eb7a-15d2-4133-b281-889e83b470c9", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/7fe176df-b7d9-4b99-aecb-903cc54ed3e9", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/fdf3e1ea-a0cb-4798-983d-926df5f48ad6/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""dca0c88c-c5bf-4be2-bdca-9263a66046da"",
    ""url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0"",
    ""created_at"": ""2016-04-11T13:33:18Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2289"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""dca0c88c-c5bf-4be2-bdca-9263a66046da"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/5f2b215e-9466-43ae-b885-629b5bef6055"",
    ""spaces_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/spaces"",
    ""domains_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/domains"",
    ""private_domains_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/private_domains"",
    ""users_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/users"",
    ""managers_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/managers"",
    ""billing_managers_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/billing_managers"",
    ""auditors_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/auditors"",
    ""app_events_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("dca0c88c-c5bf-4be2-bdca-9263a66046da", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:18Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2289", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("dca0c88c-c5bf-4be2-bdca-9263a66046da", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/5f2b215e-9466-43ae-b885-629b5bef6055", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/7da816d0-9463-47e3-9cf2-686b13e559b0/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""abf4e06b-ffdc-4856-93ae-c39b7f0fc9b6"",
        ""url"": ""/v2/services/2c0a5092-48a5-46fb-983b-bc44ad2c4940"",
        ""created_at"": ""2016-04-11T13:33:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-75"",
        ""provider"": null,
        ""url"": null,
        ""description"": ""desc-214"",
        ""long_description"": null,
        ""version"": null,
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""422177c4-f359-403a-9e38-cca6ace29a59"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": ""abf4e06b-ffdc-4856-93ae-c39b7f0fc9b6"",
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/2c0a5092-48a5-46fb-983b-bc44ad2c4940/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("abf4e06b-ffdc-4856-93ae-c39b7f0fc9b6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/2c0a5092-48a5-46fb-983b-bc44ad2c4940", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:20Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-75", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-214", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("422177c4-f359-403a-9e38-cca6ace29a59", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("abf4e06b-ffdc-4856-93ae-c39b7f0fc9b6", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/2c0a5092-48a5-46fb-983b-bc44ad2c4940/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5e2b5561-15f0-4ec1-adf8-2095124957ae"",
        ""url"": ""/v2/private_domains/3d7addb5-e857-4660-8898-b46efd79a40b"",
        ""created_at"": ""2016-04-11T13:33:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-81.example.com"",
        ""owning_organization_guid"": ""5e2b5561-15f0-4ec1-adf8-2095124957ae"",
        ""owning_organization_url"": ""/v2/organizations/988caa01-632d-4ed7-adfc-7ad1bae11d64"",
        ""shared_organizations_url"": ""/v2/private_domains/3d7addb5-e857-4660-8898-b46efd79a40b/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5e2b5561-15f0-4ec1-adf8-2095124957ae", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/3d7addb5-e857-4660-8898-b46efd79a40b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-81.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("5e2b5561-15f0-4ec1-adf8-2095124957ae", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/988caa01-632d-4ed7-adfc-7ad1bae11d64", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/3d7addb5-e857-4660-8898-b46efd79a40b/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingRolesOfAllUsersInOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/organizations/895d5c5a-eafd-4901-be16-0d2f36ce0802/user_roles?order-direction=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""31c834e2-1e10-4ce2-bca0-0dbddd88a2e7"",
        ""url"": ""/v2/users/uaa-id-399"",
        ""created_at"": ""2016-04-11T13:33:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": 0,
        ""active"": 0,
        ""default_space_guid"": null,
        ""username"": ""everything@example.com"",
        ""organization_roles"": [
          ""org_user"",
          ""org_manager"",
          ""org_auditor"",
          ""billing_manager""
        ],
        ""spaces_url"": ""/v2/users/uaa-id-399/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-399/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-399/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-399/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-399/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-399/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-399/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<RetrievingRolesOfAllUsersInOrganizationResponse> page = Utilities.DeserializePage<RetrievingRolesOfAllUsersInOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("/v2/organizations/895d5c5a-eafd-4901-be16-0d2f36ce0802/user_roles?order-direction=asc=2=1", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("31c834e2-1e10-4ce2-bca0-0dbddd88a2e7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-399", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:33:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("everything@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-399/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-399/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-399/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-399/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-399/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-399/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-399/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{
  ""memory_usage_in_mb"": 0
}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationInstanceUsageResponse()
        {
            string json = @"{
  ""instance_usage"": 3
}";

            RetrievingOrganizationInstanceUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationInstanceUsageResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(obj.InstanceUsage), true);
        }
    }
}
