//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceUsageEventsTest
    {


        [TestMethod]
        public void TestRetrieveServiceUsageEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa"",
    ""url"": ""/v2/service_usage_events/84528f63-c107-44d2-96f0-05afcc6bc503"",
    ""created_at"": ""2016-04-11T13:32:38Z""
  },
  ""entity"": {
    ""state"": ""CREATED"",
    ""org_guid"": ""c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa"",
    ""space_guid"": ""c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa"",
    ""space_name"": ""name-264"",
    ""service_instance_guid"": ""c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa"",
    ""service_instance_name"": ""name-265"",
    ""service_instance_type"": ""type-1"",
    ""service_plan_guid"": ""c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa"",
    ""service_plan_name"": ""name-266"",
    ""service_guid"": ""c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa"",
    ""service_label"": ""label-14""
  }
}";

            RetrieveServiceUsageEventResponse obj = Utilities.DeserializeJson<RetrieveServiceUsageEventResponse>(json);

            Assert.AreEqual("c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_usage_events/84528f63-c107-44d2-96f0-05afcc6bc503", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("CREATED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa", TestUtil.ToTestableString(obj.OrgGuid), true);
            Assert.AreEqual("c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("name-264", TestUtil.ToTestableString(obj.SpaceName), true);
            Assert.AreEqual("c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
            Assert.AreEqual("name-265", TestUtil.ToTestableString(obj.ServiceInstanceName), true);
            Assert.AreEqual("type-1", TestUtil.ToTestableString(obj.ServiceInstanceType), true);
            Assert.AreEqual("c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
            Assert.AreEqual("name-266", TestUtil.ToTestableString(obj.ServicePlanName), true);
            Assert.AreEqual("c49b453a-9b4e-4b4c-9c0a-fa100fab4cfa", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("label-14", TestUtil.ToTestableString(obj.ServiceLabel), true);
        }

        [TestMethod]
        public void TestListServiceUsageEventsResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/service_usage_events?after_guid=97d868a9-e59e-484c-b8e3-3dab3baad7f3=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""32e38847-3965-4e53-ad95-d0193e391d41"",
        ""url"": ""/v2/service_usage_events/38b7f090-634e-4966-b6ef-f0c4a6fd92b6"",
        ""created_at"": ""2016-04-11T13:32:47Z""
      },
      ""entity"": {
        ""state"": ""CREATED"",
        ""org_guid"": ""32e38847-3965-4e53-ad95-d0193e391d41"",
        ""space_guid"": ""32e38847-3965-4e53-ad95-d0193e391d41"",
        ""space_name"": ""name-285"",
        ""service_instance_guid"": ""32e38847-3965-4e53-ad95-d0193e391d41"",
        ""service_instance_name"": ""name-286"",
        ""service_instance_type"": ""type-8"",
        ""service_plan_guid"": ""32e38847-3965-4e53-ad95-d0193e391d41"",
        ""service_plan_name"": ""name-287"",
        ""service_guid"": ""32e38847-3965-4e53-ad95-d0193e391d41"",
        ""service_label"": ""label-21""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUsageEventsResponse> page = Utilities.DeserializePage<ListServiceUsageEventsResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("/v2/service_usage_events?after_guid=97d868a9-e59e-484c-b8e3-3dab3baad7f3=asc=2=1", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("32e38847-3965-4e53-ad95-d0193e391d41", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_usage_events/38b7f090-634e-4966-b6ef-f0c4a6fd92b6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-04-11T13:32:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("CREATED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("32e38847-3965-4e53-ad95-d0193e391d41", TestUtil.ToTestableString(page[0].OrgGuid), true);
            Assert.AreEqual("32e38847-3965-4e53-ad95-d0193e391d41", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("name-285", TestUtil.ToTestableString(page[0].SpaceName), true);
            Assert.AreEqual("32e38847-3965-4e53-ad95-d0193e391d41", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("name-286", TestUtil.ToTestableString(page[0].ServiceInstanceName), true);
            Assert.AreEqual("type-8", TestUtil.ToTestableString(page[0].ServiceInstanceType), true);
            Assert.AreEqual("32e38847-3965-4e53-ad95-d0193e391d41", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("name-287", TestUtil.ToTestableString(page[0].ServicePlanName), true);
            Assert.AreEqual("32e38847-3965-4e53-ad95-d0193e391d41", TestUtil.ToTestableString(page[0].ServiceGuid), true);
            Assert.AreEqual("label-21", TestUtil.ToTestableString(page[0].ServiceLabel), true);
        }
    }
}
